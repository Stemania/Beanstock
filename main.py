# -*- coding: utf-8 -*-
import sqlite3

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from datetime import datetime

from PyQt5.QtCore import Qt, QDate
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QLineEdit, QPushButton, QComboBox, QTableWidget, \
        QTableWidgetItem, QMessageBox
from database import create_database, add_stock, get_all_stocks, update_stock, delete_stock


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1400, 900)
        self.MainWindow = MainWindow
        MainWindow.setWindowIcon(QtGui.QIcon('img/coffee-cup.png'))
        MainWindow.setFixedSize(1400, 900)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("background-color: rgb(255, 234, 197);")
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(430, 400, 920, 451))
        self.tableWidget.setStyleSheet("QTableWidget {\n"
"    \n"
"        background-color: rgb(234,222,214);\n"
"        border: 3px solid rgb(75,53,38); \n"
"       font: 400 11pt \"Comic Sans MS\";\n"
"           /* Body background color */\n"
"    }\n"
"\n"
"    QHeaderView::section {\n"
"        background-color: rgb(178,135,106);  /* Header background color */\n"
"        color: white;  /* Text color in the header */\n"
"       font: 400 12pt \"Comic Sans MS\";\n"
"        height: 70px;  /* Set the header height */\n"
"    }\n"
"\n"
)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(True)
        self.tableWidget.horizontalHeader().setMinimumSectionSize(32)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setStretchLastSection(False)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.horizontalHeader().setHighlightSections(False)
        self.tableWidget.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.tableWidget.setSelectionBehavior(QTableWidget.SelectRows)
        self.tableWidget.setColumnWidth(0, 100) # Set the width of column 0 to 50 pixels
        self.tableWidget.setColumnWidth(1, 200)  # Set the width of column 1 to 150 pixels
        self.tableWidget.setColumnWidth(2, 100)
        self.tableWidget.setColumnWidth(4, 130)
        self.tableWidget.setColumnWidth(6, 100)  # Set the width of column 2 to 100 pixels
        self.show_add = QtWidgets.QPushButton(self.centralwidget)
        self.show_add.setGeometry(QtCore.QRect(50, 360, 101, 51))
        self.show_add.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.show_add.setStyleSheet("background-color: rgb(75, 53, 38);\n"
"color: rgb(255, 255, 255);\n"
"font: 600 14pt \"Comic Sans MS\";")
        self.show_add.setObjectName("show_add")
        self.show_update = QtWidgets.QPushButton(self.centralwidget)
        self.show_update.setGeometry(QtCore.QRect(150, 360, 101, 51))
        self.show_update.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.show_update.setStyleSheet("background-color: rgb(75, 53, 38);\n"
"color: rgb(255, 255, 255);\n"
"font: 600 14pt \"Comic Sans MS\";")

        self.inactive_button_style = (
            "background-color: rgb(75, 53, 38);\n"
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";"
        )
        self.active_button_style = (
            "background-color: rgb(190,152,127);\n"
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";"
        )
        self.widget_4 = QtWidgets.QWidget(self.centralwidget)
        self.widget_4.setGeometry(QtCore.QRect(-10, -1, 1421, 61))
        self.widget_4.setStyleSheet("background-color: rgb(75, 53, 38);")
        self.widget_4.setObjectName("widget_4")
        self.label_15 = QtWidgets.QLabel(self.widget_4)
        self.label_15.setGeometry(QtCore.QRect(140, 10, 191, 41))
        self.label_15.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 600 16pt \"Comic Sans MS\";")
        self.label_15.setObjectName("label_15")
        self.label_21 = QtWidgets.QLabel(self.widget_4)
        self.label_21.setGeometry(QtCore.QRect(80, 10, 49, 41))
        self.label_21.setText("")
        self.label_21.setPixmap(QtGui.QPixmap("img/coffee-cup.png"))
        self.label_21.setScaledContents(True)
        self.label_21.setObjectName("label_21")

        self.coffee_container = QtWidgets.QWidget(self.centralwidget)
        self.coffee_container.setGeometry(QtCore.QRect(100, 100, 221, 191))
        self.coffee_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                            "background-color: rgb(150, 114, 89);\n"
                                            "border-radius: 20px; ")
        self.coffee_container.setObjectName("coffee_container")
        self.coffee_line_bg = QtWidgets.QWidget(self.coffee_container)
        self.coffee_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.coffee_line_bg.setStyleSheet("border: transparent;\n"
                                          "background-color: rgb(219, 193, 172);\n"
                                          "border-radius: 0px; ")
        self.coffee_line_bg.setObjectName("coffee_line_bg")
        self.coffee_name = QtWidgets.QLabel(self.coffee_container)
        self.coffee_name.setGeometry(QtCore.QRect(35, 140, 150, 31))
        self.coffee_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                       "font: 600 14pt \"Comic Sans MS\";\n"
                                       "border: transparent;\n"
                                       "background-color: transparent;")
        self.coffee_name.setObjectName("coffee_name")
        self.coffee_pic = QtWidgets.QLabel(self.centralwidget)
        self.coffee_pic.setGeometry(QtCore.QRect(180, 160, 71, 81))
        self.coffee_pic.setStyleSheet("background-color: transparent;")
        self.coffee_pic.setText("")
        self.coffee_pic.setPixmap(QtGui.QPixmap("img/coffee-beans.png"))
        self.coffee_pic.setScaledContents(True)
        self.coffee_pic.setObjectName("coffee_pic")
        self.coffee_available = QtWidgets.QLabel(self.coffee_container)
        self.coffee_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.coffee_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.coffee_layout_container.setGeometry(QtCore.QRect(100, 100, 221, 80))
        self.coffee_layout_container.setStyleSheet(
                                            "background-color: transparent;")
        self.coffee_layout_container.setObjectName("coffee_layout_container")
        coffee_layout = QtWidgets.QHBoxLayout()
        coffee_layout.addWidget(self.coffee_available)
        self.coffee_layout_container.setLayout(coffee_layout)
        coffee_layout.setAlignment(self.coffee_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.coffee_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "font: 600 25pt \"Comic Sans MS\";\n"
                                        "border: transparent;\n"
                                        "background-color: transparent;")
        self.coffee_available.setObjectName("coffee_available")

        self.milk_container = QtWidgets.QWidget(self.centralwidget)
        self.milk_container.setGeometry(QtCore.QRect(350, 100, 221, 191))
        self.milk_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                          "background-color: rgb(150, 114, 89);\n"
                                          "border-radius: 20px; ")
        self.milk_container.setObjectName("milk_container")
        self.milk_line_bg = QtWidgets.QWidget(self.milk_container)
        self.milk_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.milk_line_bg.setStyleSheet("border: transparent;\n"
                                        "background-color: rgb(219, 193, 172);\n"
                                        "border-radius: 0px; ")
        self.milk_line_bg.setObjectName("milk_line_bg")
        self.milk_name = QtWidgets.QLabel(self.milk_container)
        self.milk_name.setGeometry(QtCore.QRect(88, 140, 61, 31))
        self.milk_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                     "font: 600 14pt \"Comic Sans MS\";\n"
                                     "border: transparent;\n"
                                     "background-color: transparent;")
        self.milk_name.setObjectName("milk_name")
        self.milk_pic = QtWidgets.QLabel(self.centralwidget)
        self.milk_pic.setGeometry(QtCore.QRect(426, 160, 71, 81))
        self.milk_pic.setStyleSheet("background-color: transparent;")
        self.milk_pic.setText("")
        self.milk_pic.setPixmap(QtGui.QPixmap("img/milk.png"))
        self.milk_pic.setScaledContents(True)
        self.milk_pic.setObjectName("milk_pic")
        self.milk_available = QtWidgets.QLabel(self.milk_container)
        self.milk_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.milk_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.milk_layout_container.setGeometry(QtCore.QRect(350, 100, 221, 80))
        self.milk_layout_container.setStyleSheet(
                                            "background-color: transparent;")
        self.milk_layout_container.setObjectName("milk_layout_container")
        milk_layout = QtWidgets.QHBoxLayout()
        milk_layout.addWidget(self.milk_available)
        self.milk_layout_container.setLayout(milk_layout)
        milk_layout.setAlignment(self.milk_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.milk_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "font: 600 25pt \"Comic Sans MS\";\n"
                                        "border: transparent;\n"
                                        "background-color: transparent;")
        self.milk_available.setObjectName("milk_available")

        self.sugar_container = QtWidgets.QWidget(self.centralwidget)
        self.sugar_container.setGeometry(QtCore.QRect(600, 100, 221, 191))
        self.sugar_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                           "background-color: rgb(150, 114, 89);\n"
                                           "border-radius: 20px; ")
        self.sugar_container.setObjectName("sugar_container")
        self.sugar_line_bg = QtWidgets.QWidget(self.sugar_container)
        self.sugar_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.sugar_line_bg.setStyleSheet("border: transparent;\n"
                                         "background-color: rgb(219, 193, 172);\n"
                                         "border-radius: 0px; ")
        self.sugar_line_bg.setObjectName("sugar_line_bg")
        self.sugar_available = QtWidgets.QLabel(self.sugar_container)
        self.sugar_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.sugar_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.sugar_layout_container.setGeometry(QtCore.QRect(600, 100, 221, 80))
        self.sugar_layout_container.setStyleSheet(
                                            "background-color: transparent;")
        self.sugar_layout_container.setObjectName("milk_layout_container")
        sugar_layout = QtWidgets.QHBoxLayout()
        sugar_layout.addWidget(self.sugar_available)
        self.sugar_layout_container.setLayout(sugar_layout)
        sugar_layout.setAlignment(self.sugar_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.sugar_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "font: 600 25pt \"Comic Sans MS\";\n"
                                        "border: transparent;\n"
                                        "background-color: transparent;")
        self.sugar_available.setObjectName("sugar_available")
        self.sugar_name = QtWidgets.QLabel(self.sugar_container)
        self.sugar_name.setGeometry(QtCore.QRect(77, 140, 71, 31))
        self.sugar_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "font: 600 14pt \"Comic Sans MS\";\n"
                                      "border: transparent;\n"
                                      "background-color: transparent;")
        self.sugar_name.setObjectName("sugar_name")
        self.sugar_pic = QtWidgets.QLabel(self.centralwidget)
        self.sugar_pic.setGeometry(QtCore.QRect(672, 160, 71, 81))
        self.sugar_pic.setStyleSheet("background-color: transparent;")
        self.sugar_pic.setText("")
        self.sugar_pic.setPixmap(QtGui.QPixmap("img/sugar.png"))
        self.sugar_pic.setScaledContents(True)
        self.sugar_pic.setObjectName("sugar_pic")

        self.choco_container = QtWidgets.QWidget(self.centralwidget)
        self.choco_container.setGeometry(QtCore.QRect(850, 100, 221, 191))
        self.choco_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                           "background-color: rgb(150, 114, 89);\n"
                                           "border-radius: 20px; ")
        self.choco_container.setObjectName("choco_container")
        self.choco_line_bg = QtWidgets.QWidget(self.choco_container)
        self.choco_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.choco_line_bg.setStyleSheet("border: transparent;\n"
                                         "background-color: rgb(219, 193, 172);\n"
                                         "border-radius: 0px; ")
        self.choco_line_bg.setObjectName("choco_line_bg")
        self.choco_available = QtWidgets.QLabel(self.choco_container)
        self.choco_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.choco_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.choco_layout_container.setGeometry(QtCore.QRect(850, 100, 221, 80))
        self.choco_layout_container.setStyleSheet(
                                            "background-color: transparent;")
        self.choco_layout_container.setObjectName("choco_layout_container")
        choco_layout = QtWidgets.QHBoxLayout()
        choco_layout.addWidget(self.choco_available)
        self.choco_layout_container.setLayout(choco_layout)
        choco_layout.setAlignment(self.choco_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.choco_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "font: 600 25pt \"Comic Sans MS\";\n"
                                        "border: transparent;\n"
                                        "background-color: transparent;")
        self.choco_available.setObjectName("choco_available")
        self.choco_name = QtWidgets.QLabel(self.choco_container)
        self.choco_name.setGeometry(QtCore.QRect(20, 140, 180, 31))
        self.choco_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "font: 600 14pt \"Comic Sans MS\";\n"
                                      "border: transparent;\n"
                                      "background-color: transparent;")
        self.choco_name.setObjectName("choco_name")
        self.choco_pic = QtWidgets.QLabel(self.centralwidget)
        self.choco_pic.setGeometry(QtCore.QRect(925, 160, 71, 81))
        self.choco_pic.setStyleSheet("background-color: transparent;")
        self.choco_pic.setText("")
        self.choco_pic.setPixmap(QtGui.QPixmap("img/chcocosyrup.png"))
        self.choco_pic.setScaledContents(True)
        self.choco_pic.setObjectName("choco_pic")

        self.vanilla_container = QtWidgets.QWidget(self.centralwidget)
        self.vanilla_container.setGeometry(QtCore.QRect(1100, 100, 221, 191))
        self.vanilla_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                             "background-color: rgb(150, 114, 89);\n"
                                             "border-radius: 20px; ")
        self.vanilla_container.setObjectName("vanilla_container")
        self.vanilla_name = QtWidgets.QLabel(self.vanilla_container)
        self.vanilla_name.setGeometry(QtCore.QRect(37, 140, 151, 31))
        self.vanilla_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "font: 600 14pt \"Comic Sans MS\";\n"
                                        "border: transparent;\n"
                                        "background-color: transparent;")
        self.vanilla_name.setObjectName("vanilla_name")
        self.vanilla_line_bg = QtWidgets.QWidget(self.vanilla_container)
        self.vanilla_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.vanilla_line_bg.setStyleSheet("border: transparent;\n"
                                           "background-color: rgb(219, 193, 172);\n"
                                           "border-radius: 0px; ")
        self.vanilla_line_bg.setObjectName("vanilla_line_bg")
        self.vanilla_available = QtWidgets.QLabel(self.vanilla_container)
        self.vanilla_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.vanilla_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.vanilla_layout_container.setGeometry(QtCore.QRect(1100, 100, 221, 80))
        self.vanilla_layout_container.setStyleSheet(
            "background-color: transparent;")
        self.vanilla_layout_container.setObjectName("vanilla_layout_container")
        vanilla_layout = QtWidgets.QHBoxLayout()
        vanilla_layout.addWidget(self.vanilla_available)
        self.vanilla_layout_container.setLayout(vanilla_layout)
        vanilla_layout.setAlignment(self.vanilla_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.vanilla_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "font: 600 25pt \"Comic Sans MS\";\n"
                                            "border: transparent;\n"
                                            "background-color: transparent;")
        self.vanilla_available.setObjectName("vanilla_available")
        self.vanilla_pic = QtWidgets.QLabel(self.centralwidget)
        self.vanilla_pic.setGeometry(QtCore.QRect(1175, 160, 71, 81))
        self.vanilla_pic.setStyleSheet("background-color: transparent;")
        self.vanilla_pic.setText("")
        self.vanilla_pic.setPixmap(QtGui.QPixmap("img/vanillasyrup.png"))
        self.vanilla_pic.setScaledContents(True)
        self.vanilla_pic.setObjectName("vanilla_pic")

        self.espresso_container = QtWidgets.QWidget(self.centralwidget)
        self.espresso_container.setGeometry(QtCore.QRect(100, 100, 221, 191))
        self.espresso_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.espresso_container.setObjectName("espresso_container")

        self.espresso_line_bg = QtWidgets.QWidget(self.espresso_container)
        self.espresso_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.espresso_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.espresso_line_bg.setObjectName("espresso_line_bg")

        self.espresso_name = QtWidgets.QLabel(self.espresso_container)
        self.espresso_name.setGeometry(QtCore.QRect(25, 140, 170, 31))
        self.espresso_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.espresso_name.setObjectName("espresso_name")

        self.espresso_pic = QtWidgets.QLabel(self.centralwidget)
        self.espresso_pic.setGeometry(QtCore.QRect(180, 160, 71, 81))
        self.espresso_pic.setStyleSheet("background-color: transparent;")
        self.espresso_pic.setText("")
        self.espresso_pic.setPixmap(QtGui.QPixmap("img/expresso.png"))
        self.espresso_pic.setScaledContents(True)
        self.espresso_pic.setObjectName("espresso_pic")

        self.espresso_available = QtWidgets.QLabel(self.espresso_container)
        self.espresso_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.espresso_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.espresso_layout_container.setGeometry(QtCore.QRect(100, 100, 221, 80))
        self.espresso_layout_container.setStyleSheet("background-color: transparent;")
        self.espresso_layout_container.setObjectName("espresso_layout_container")
        espresso_layout = QtWidgets.QHBoxLayout()
        espresso_layout.addWidget(self.espresso_available)
        self.espresso_layout_container.setLayout(espresso_layout)
        espresso_layout.setAlignment(self.espresso_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.espresso_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.espresso_available.setObjectName("espresso_available")

        self.matcha_container = QtWidgets.QWidget(self.centralwidget)
        self.matcha_container.setGeometry(QtCore.QRect(350, 100, 221, 191))
        self.matcha_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.matcha_container.setObjectName("matcha_container")

        self.matcha_line_bg = QtWidgets.QWidget(self.matcha_container)
        self.matcha_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.matcha_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.matcha_line_bg.setObjectName("matcha_line_bg")

        self.matcha_name = QtWidgets.QLabel(self.matcha_container)
        self.matcha_name.setGeometry(QtCore.QRect(25, 140, 170, 31))
        self.matcha_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.matcha_name.setObjectName("matcha_name")

        self.matcha_pic = QtWidgets.QLabel(self.centralwidget)
        self.matcha_pic.setGeometry(QtCore.QRect(426, 160, 71, 81))
        self.matcha_pic.setStyleSheet("background-color: transparent;")
        self.matcha_pic.setText("")
        self.matcha_pic.setPixmap(QtGui.QPixmap("img/matcha.png"))
        self.matcha_pic.setScaledContents(True)
        self.matcha_pic.setObjectName("matcha_pic")

        self.matcha_available = QtWidgets.QLabel(self.matcha_container)
        self.matcha_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.matcha_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.matcha_layout_container.setGeometry(QtCore.QRect(350, 100, 221, 80))
        self.matcha_layout_container.setStyleSheet("background-color: transparent;")
        self.matcha_layout_container.setObjectName("matcha_layout_container")
        matcha_layout = QtWidgets.QHBoxLayout()
        matcha_layout.addWidget(self.matcha_available)
        self.matcha_layout_container.setLayout(matcha_layout)
        matcha_layout.setAlignment(self.matcha_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.matcha_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.matcha_available.setObjectName("matcha_available")

        self.tea_container = QtWidgets.QWidget(self.centralwidget)
        self.tea_container.setGeometry(QtCore.QRect(600, 100, 221, 191))
        self.tea_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.tea_container.setObjectName("tea_container")

        self.tea_line_bg = QtWidgets.QWidget(self.tea_container)
        self.tea_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.tea_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.tea_line_bg.setObjectName("tea_line_bg")

        self.tea_name = QtWidgets.QLabel(self.tea_container)
        self.tea_name.setGeometry(QtCore.QRect(60, 140, 120, 31))
        self.tea_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.tea_name.setObjectName("tea_name")

        self.tea_pic = QtWidgets.QLabel(self.centralwidget)
        self.tea_pic.setGeometry(QtCore.QRect(690, 160, 71, 81))
        self.tea_pic.setStyleSheet("background-color: transparent;")
        self.tea_pic.setText("")
        self.tea_pic.setPixmap(QtGui.QPixmap("img/tea-bag.png"))
        self.tea_pic.setScaledContents(True)
        self.tea_pic.setObjectName("tea_pic")

        self.tea_available = QtWidgets.QLabel(self.tea_container)
        self.tea_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.tea_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.tea_layout_container.setGeometry(QtCore.QRect(600, 100, 221, 80))
        self.tea_layout_container.setStyleSheet("background-color: transparent;")
        self.tea_layout_container.setObjectName("tea_layout_container")
        tea_layout = QtWidgets.QHBoxLayout()
        tea_layout.addWidget(self.tea_available)
        self.tea_layout_container.setLayout(tea_layout)
        tea_layout.setAlignment(self.tea_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.tea_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.tea_available.setObjectName("tea_available")

        self.caramel_container = QtWidgets.QWidget(self.centralwidget)
        self.caramel_container.setGeometry(QtCore.QRect(850, 100, 221, 191))
        self.caramel_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                             "background-color: rgb(150, 114, 89);\n"
                                             "border-radius: 20px; ")
        self.caramel_container.setObjectName("caramel_container")

        self.caramel_line_bg = QtWidgets.QWidget(self.caramel_container)
        self.caramel_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.caramel_line_bg.setStyleSheet("border: transparent;\n"
                                           "background-color: rgb(219, 193, 172);\n"
                                           "border-radius: 0px; ")
        self.caramel_line_bg.setObjectName("caramel_line_bg")

        self.caramel_available = QtWidgets.QLabel(self.caramel_container)
        self.caramel_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.caramel_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.caramel_layout_container.setGeometry(QtCore.QRect(850, 100, 221, 80))
        self.caramel_layout_container.setStyleSheet("background-color: transparent;")
        self.caramel_layout_container.setObjectName("caramel_layout_container")

        caramel_layout = QtWidgets.QHBoxLayout()
        caramel_layout.addWidget(self.caramel_available)
        self.caramel_layout_container.setLayout(caramel_layout)
        caramel_layout.setAlignment(self.caramel_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.caramel_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "font: 600 25pt \"Comic Sans MS\";\n"
                                             "border: transparent;\n"
                                             "background-color: transparent;")
        self.caramel_available.setObjectName("caramel_available")

        self.caramel_name = QtWidgets.QLabel(self.caramel_container)
        self.caramel_name.setGeometry(QtCore.QRect(27, 140, 171, 31))
        self.caramel_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "font: 600 14pt \"Comic Sans MS\";\n"
                                        "border: transparent;\n"
                                        "background-color: transparent;")
        self.caramel_name.setObjectName("caramel_name")

        self.caramel_pic = QtWidgets.QLabel(self.centralwidget)
        self.caramel_pic.setGeometry(QtCore.QRect(925, 160, 71, 81))
        self.caramel_pic.setStyleSheet("background-color: transparent;")
        self.caramel_pic.setText("")
        self.caramel_pic.setPixmap(QtGui.QPixmap("img/caramel.png"))
        self.caramel_pic.setScaledContents(True)
        self.caramel_pic.setObjectName("caramel_pic")

        self.hazelnut_container = QtWidgets.QWidget(self.centralwidget)
        self.hazelnut_container.setGeometry(QtCore.QRect(1100, 100, 221, 191))
        self.hazelnut_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                              "background-color: rgb(150, 114, 89);\n"
                                              "border-radius: 20px; ")
        self.hazelnut_container.setObjectName("hazelnut_container")

        self.hazelnut_name = QtWidgets.QLabel(self.hazelnut_container)
        self.hazelnut_name.setGeometry(QtCore.QRect(25, 140, 170, 31))
        self.hazelnut_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                         "font: 600 14pt \"Comic Sans MS\";\n"
                                         "border: transparent;\n"
                                         "background-color: transparent;")
        self.hazelnut_name.setObjectName("hazelnut_name")

        self.hazelnut_line_bg = QtWidgets.QWidget(self.hazelnut_container)
        self.hazelnut_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.hazelnut_line_bg.setStyleSheet("border: transparent;\n"
                                            "background-color: rgb(219, 193, 172);\n"
                                            "border-radius: 0px; ")
        self.hazelnut_line_bg.setObjectName("hazelnut_line_bg")

        self.hazelnut_available = QtWidgets.QLabel(self.hazelnut_container)
        self.hazelnut_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.hazelnut_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.hazelnut_layout_container.setGeometry(QtCore.QRect(1100, 100, 221, 80))
        self.hazelnut_layout_container.setStyleSheet("background-color: transparent;")
        self.hazelnut_layout_container.setObjectName("hazelnut_layout_container")

        hazelnut_layout = QtWidgets.QHBoxLayout()
        hazelnut_layout.addWidget(self.hazelnut_available)
        self.hazelnut_layout_container.setLayout(hazelnut_layout)
        hazelnut_layout.setAlignment(self.hazelnut_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.hazelnut_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                              "font: 600 25pt \"Comic Sans MS\";\n"
                                              "border: transparent;\n"
                                              "background-color: transparent;")
        self.hazelnut_available.setObjectName("hazelnut_available")

        self.hazelnut_pic = QtWidgets.QLabel(self.centralwidget)
        self.hazelnut_pic.setGeometry(QtCore.QRect(1175, 160, 71, 81))
        self.hazelnut_pic.setStyleSheet("background-color: transparent;")
        self.hazelnut_pic.setText("")
        self.hazelnut_pic.setPixmap(QtGui.QPixmap("img/hazelnut.png"))
        self.hazelnut_pic.setScaledContents(True)
        self.hazelnut_pic.setObjectName("hazelnut_pic")

        self.cinnamon_container = QtWidgets.QWidget(self.centralwidget)
        self.cinnamon_container.setGeometry(QtCore.QRect(100, 100, 221, 191))
        self.cinnamon_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.cinnamon_container.setObjectName("cinnamon_container")

        self.cinnamon_line_bg = QtWidgets.QWidget(self.cinnamon_container)
        self.cinnamon_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.cinnamon_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.cinnamon_line_bg.setObjectName("cinnamon_line_bg")

        self.cinnamon_name = QtWidgets.QLabel(self.cinnamon_container)
        self.cinnamon_name.setGeometry(QtCore.QRect(18, 140, 195, 31))
        self.cinnamon_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.cinnamon_name.setObjectName("cinnamon_name")

        self.cinnamon_pic = QtWidgets.QLabel(self.centralwidget)
        self.cinnamon_pic.setGeometry(QtCore.QRect(180, 160, 71, 81))
        self.cinnamon_pic.setStyleSheet("background-color: transparent;")
        self.cinnamon_pic.setText("")
        self.cinnamon_pic.setPixmap(QtGui.QPixmap("img/cinnamon.png"))
        self.cinnamon_pic.setScaledContents(True)
        self.cinnamon_pic.setObjectName("cinnamon_pic")

        self.cinnamon_available = QtWidgets.QLabel(self.cinnamon_container)
        self.cinnamon_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.cinnamon_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.cinnamon_layout_container.setGeometry(QtCore.QRect(100, 100, 221, 80))
        self.cinnamon_layout_container.setStyleSheet("background-color: transparent;")
        self.cinnamon_layout_container.setObjectName("cinnamon_layout_container")
        cinnamon_layout = QtWidgets.QHBoxLayout()
        cinnamon_layout.addWidget(self.cinnamon_available)
        self.cinnamon_layout_container.setLayout(cinnamon_layout)
        cinnamon_layout.setAlignment(self.cinnamon_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.cinnamon_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.cinnamon_available.setObjectName("cinnamon_available")

        self.whip_cream_container = QtWidgets.QWidget(self.centralwidget)
        self.whip_cream_container.setGeometry(QtCore.QRect(350, 100, 221, 191))
        self.whip_cream_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.whip_cream_container.setObjectName("whip_cream_container")

        self.whip_cream_line_bg = QtWidgets.QWidget(self.whip_cream_container)
        self.whip_cream_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.whip_cream_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.whip_cream_line_bg.setObjectName("whip_cream_line_bg")

        self.whip_cream_name = QtWidgets.QLabel(self.whip_cream_container)
        self.whip_cream_name.setGeometry(QtCore.QRect(45, 140, 170, 31))
        self.whip_cream_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.whip_cream_name.setObjectName("whip_cream_name")

        self.whip_cream_pic = QtWidgets.QLabel(self.centralwidget)
        self.whip_cream_pic.setGeometry(QtCore.QRect(426, 160, 71, 81))
        self.whip_cream_pic.setStyleSheet("background-color: transparent;")
        self.whip_cream_pic.setText("")
        self.whip_cream_pic.setPixmap(QtGui.QPixmap("img/whip-cream.png"))
        self.whip_cream_pic.setScaledContents(True)
        self.whip_cream_pic.setObjectName("whip_cream_pic")

        self.whip_cream_available = QtWidgets.QLabel(self.whip_cream_container)
        self.whip_cream_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.whip_cream_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.whip_cream_layout_container.setGeometry(QtCore.QRect(350, 100, 221, 80))
        self.whip_cream_layout_container.setStyleSheet("background-color: transparent;")
        self.whip_cream_layout_container.setObjectName("whip_cream_layout_container")
        whip_cream_layout = QtWidgets.QHBoxLayout()
        whip_cream_layout.addWidget(self.whip_cream_available)
        self.whip_cream_layout_container.setLayout(whip_cream_layout)
        whip_cream_layout.setAlignment(self.whip_cream_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.whip_cream_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.whip_cream_available.setObjectName("whip_cream_available")

        self.honey_container = QtWidgets.QWidget(self.centralwidget)
        self.honey_container.setGeometry(QtCore.QRect(600, 100, 221, 191))
        self.honey_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.honey_container.setObjectName("honey_container")

        self.honey_line_bg = QtWidgets.QWidget(self.honey_container)
        self.honey_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.honey_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.honey_line_bg.setObjectName("honey_line_bg")

        self.honey_name = QtWidgets.QLabel(self.honey_container)
        self.honey_name.setGeometry(QtCore.QRect(80, 140, 120, 31))
        self.honey_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.honey_name.setObjectName("honey_name")

        self.honey_pic = QtWidgets.QLabel(self.centralwidget)
        self.honey_pic.setGeometry(QtCore.QRect(675, 155, 71, 81))
        self.honey_pic.setStyleSheet("background-color: transparent;")
        self.honey_pic.setText("")
        self.honey_pic.setPixmap(QtGui.QPixmap("img/honey.png"))
        self.honey_pic.setScaledContents(True)
        self.honey_pic.setObjectName("honey_pic")

        self.honey_available = QtWidgets.QLabel(self.honey_container)
        self.honey_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.honey_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.honey_layout_container.setGeometry(QtCore.QRect(600, 100, 221, 80))
        self.honey_layout_container.setStyleSheet("background-color: transparent;")
        self.honey_layout_container.setObjectName("honey_layout_container")
        honey_layout = QtWidgets.QHBoxLayout()
        honey_layout.addWidget(self.honey_available)
        self.honey_layout_container.setLayout(honey_layout)
        honey_layout.setAlignment(self.honey_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.honey_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.honey_available.setObjectName("honey_available")

        self.creamer_container = QtWidgets.QWidget(self.centralwidget)
        self.creamer_container.setGeometry(QtCore.QRect(850, 100, 221, 191))
        self.creamer_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                                 "background-color: rgb(150, 114, 89);\n"
                                                 "border-radius: 20px; ")
        self.creamer_container.setObjectName("creamer_container")

        self.creamer_line_bg = QtWidgets.QWidget(self.creamer_container)
        self.creamer_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.creamer_line_bg.setStyleSheet("border: transparent;\n"
                                               "background-color: rgb(219, 193, 172);\n"
                                               "border-radius: 0px; ")
        self.creamer_line_bg.setObjectName("almond_milk_line_bg")

        self.creamer_available = QtWidgets.QLabel(self.creamer_container)
        self.creamer_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.creamer_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.creamer_layout_container.setGeometry(QtCore.QRect(850, 100, 221, 80))
        self.creamer_layout_container.setStyleSheet("background-color: transparent;")
        self.creamer_layout_container.setObjectName("creamer_layout_container")

        creamer_layout = QtWidgets.QHBoxLayout()
        creamer_layout.addWidget(self.creamer_available)
        self.creamer_layout_container.setLayout(creamer_layout)
        creamer_layout.setAlignment(self.creamer_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.creamer_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "font: 600 25pt \"Comic Sans MS\";\n"
                                             "border: transparent;\n"
                                             "background-color: transparent;")
        self.creamer_available.setObjectName("creamer_available")

        self.creamer_name = QtWidgets.QLabel(self.creamer_container)
        self.creamer_name.setGeometry(QtCore.QRect(60, 140, 171, 31))
        self.creamer_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "font: 600 14pt \"Comic Sans MS\";\n"
                                        "border: transparent;\n"
                                        "background-color: transparent;")
        self.creamer_name.setObjectName("creamer_name")

        self.creamer_pic = QtWidgets.QLabel(self.centralwidget)
        self.creamer_pic.setGeometry(QtCore.QRect(925, 160, 71, 81))
        self.creamer_pic.setStyleSheet("background-color: transparent;")
        self.creamer_pic.setText("")
        self.creamer_pic.setPixmap(QtGui.QPixmap("img/creamer.png"))
        self.creamer_pic.setScaledContents(True)
        self.creamer_pic.setObjectName("creamer_pic")

        self.coconut_milk_container = QtWidgets.QWidget(self.centralwidget)
        self.coconut_milk_container.setGeometry(QtCore.QRect(1100, 100, 221, 191))
        self.coconut_milk_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                                  "background-color: rgb(150, 114, 89);\n"
                                                  "border-radius: 20px; ")
        self.coconut_milk_container.setObjectName("coconut_milk_container")

        self.coconut_milk_name = QtWidgets.QLabel(self.coconut_milk_container)
        self.coconut_milk_name.setGeometry(QtCore.QRect(40, 140, 170, 31))
        self.coconut_milk_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "font: 600 14pt \"Comic Sans MS\";\n"
                                             "border: transparent;\n"
                                             "background-color: transparent;")
        self.coconut_milk_name.setObjectName("coconut_milk_name")

        self.coconut_milk_line_bg = QtWidgets.QWidget(self.coconut_milk_container)
        self.coconut_milk_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.coconut_milk_line_bg.setStyleSheet("border: transparent;\n"
                                                "background-color: rgb(219, 193, 172);\n"
                                                "border-radius: 0px; ")
        self.coconut_milk_line_bg.setObjectName("coconut_milk_line_bg")

        self.coconut_milk_available = QtWidgets.QLabel(self.coconut_milk_container)
        self.coconut_milk_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.coconut_milk_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.coconut_milk_layout_container.setGeometry(QtCore.QRect(1100, 100, 221, 80))
        self.coconut_milk_layout_container.setStyleSheet("background-color: transparent;")
        self.coconut_milk_layout_container.setObjectName("coconut_milk_layout_container")

        coconut_milk_layout = QtWidgets.QHBoxLayout()
        coconut_milk_layout.addWidget(self.coconut_milk_available)
        self.coconut_milk_layout_container.setLayout(coconut_milk_layout)
        coconut_milk_layout.setAlignment(self.coconut_milk_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.coconut_milk_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "font: 600 25pt \"Comic Sans MS\";\n"
                                                  "border: transparent;\n"
                                                  "background-color: transparent;")
        self.coconut_milk_available.setObjectName("coconut_milk_available")

        self.coconut_milk_pic = QtWidgets.QLabel(self.centralwidget)
        self.coconut_milk_pic.setGeometry(QtCore.QRect(1175, 160, 71, 81))
        self.coconut_milk_pic.setStyleSheet("background-color: transparent;")
        self.coconut_milk_pic.setText("")
        self.coconut_milk_pic.setPixmap(QtGui.QPixmap("img/coconut-milk.png"))
        self.coconut_milk_pic.setScaledContents(True)
        self.coconut_milk_pic.setObjectName("coconut_milk_pic")

        self.yogurt_container = QtWidgets.QWidget(self.centralwidget)
        self.yogurt_container.setGeometry(QtCore.QRect(100, 100, 221, 191))
        self.yogurt_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.yogurt_container.setObjectName("yogurt_container")

        self.yogurt_line_bg = QtWidgets.QWidget(self.yogurt_container)
        self.yogurt_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.yogurt_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.yogurt_line_bg.setObjectName("yogurt_line_bg")

        self.yogurt_name = QtWidgets.QLabel(self.yogurt_container)
        self.yogurt_name.setGeometry(QtCore.QRect(80, 140, 195, 31))
        self.yogurt_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.yogurt_name.setObjectName("yogurt_name")

        self.yogurt_pic = QtWidgets.QLabel(self.centralwidget)
        self.yogurt_pic.setGeometry(QtCore.QRect(180, 160, 71, 81))
        self.yogurt_pic.setStyleSheet("background-color: transparent;")
        self.yogurt_pic.setText("")
        self.yogurt_pic.setPixmap(QtGui.QPixmap("img/yogurt.png"))
        self.yogurt_pic.setScaledContents(True)
        self.yogurt_pic.setObjectName("yogurt_pic")

        self.yogurt_available = QtWidgets.QLabel(self.yogurt_container)
        self.yogurt_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.yogurt_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.yogurt_layout_container.setGeometry(QtCore.QRect(100, 100, 221, 80))
        self.yogurt_layout_container.setStyleSheet("background-color: transparent;")
        self.yogurt_layout_container.setObjectName("yogurt_layout_container")
        yogurt_layout = QtWidgets.QHBoxLayout()
        yogurt_layout.addWidget(self.yogurt_available)
        self.yogurt_layout_container.setLayout(yogurt_layout)
        yogurt_layout.setAlignment(self.yogurt_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.yogurt_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.yogurt_available.setObjectName("yogurt_available")

        self.whey_protein_container = QtWidgets.QWidget(self.centralwidget)
        self.whey_protein_container.setGeometry(QtCore.QRect(350, 100, 221, 191))
        self.whey_protein_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.whey_protein_container.setObjectName("whey_protein_container")

        self.whey_protein_line_bg = QtWidgets.QWidget(self.whey_protein_container)
        self.whey_protein_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.whey_protein_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.whey_protein_line_bg.setObjectName("whey_protein_line_bg")

        self.whey_protein_name = QtWidgets.QLabel(self.whey_protein_container)
        self.whey_protein_name.setGeometry(QtCore.QRect(35, 140, 170, 31))
        self.whey_protein_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.whey_protein_name.setObjectName("whey_protein_name")

        self.whey_protein_pic = QtWidgets.QLabel(self.centralwidget)
        self.whey_protein_pic.setGeometry(QtCore.QRect(435, 160, 71, 81))
        self.whey_protein_pic.setStyleSheet("background-color: transparent;")
        self.whey_protein_pic.setText("")
        self.whey_protein_pic.setPixmap(QtGui.QPixmap("img/whey-protein.png"))
        self.whey_protein_pic.setScaledContents(True)
        self.whey_protein_pic.setObjectName("whey_protein_pic")

        self.whey_protein_available = QtWidgets.QLabel(self.whey_protein_container)
        self.whey_protein_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.whey_protein_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.whey_protein_layout_container.setGeometry(QtCore.QRect(350, 100, 221, 80))
        self.whey_protein_layout_container.setStyleSheet("background-color: transparent;")
        self.whey_protein_layout_container.setObjectName("whey_protein_layout_container")
        whey_protein_layout = QtWidgets.QHBoxLayout()
        whey_protein_layout.addWidget(self.whey_protein_available)
        self.whey_protein_layout_container.setLayout(whey_protein_layout)
        whey_protein_layout.setAlignment(self.whey_protein_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.whey_protein_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.whey_protein_available.setObjectName("whey_protein_available")

        self.eggs_container = QtWidgets.QWidget(self.centralwidget)
        self.eggs_container.setGeometry(QtCore.QRect(600, 100, 221, 191))
        self.eggs_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.eggs_container.setObjectName("eggs_container")

        self.eggs_line_bg = QtWidgets.QWidget(self.eggs_container)
        self.eggs_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.eggs_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.eggs_line_bg.setObjectName("eggs_line_bg")

        self.eggs_name = QtWidgets.QLabel(self.eggs_container)
        self.eggs_name.setGeometry(QtCore.QRect(85, 140, 120, 31))
        self.eggs_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.eggs_name.setObjectName("eggs_name")

        self.eggs_pic = QtWidgets.QLabel(self.centralwidget)
        self.eggs_pic.setGeometry(QtCore.QRect(665, 155, 91, 101))
        self.eggs_pic.setStyleSheet("background-color: transparent;")
        self.eggs_pic.setText("")
        self.eggs_pic.setPixmap(QtGui.QPixmap("img/eggs.png"))
        self.eggs_pic.setScaledContents(True)
        self.eggs_pic.setObjectName("eggs_pic")

        self.eggs_available = QtWidgets.QLabel(self.eggs_container)
        self.eggs_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.eggs_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.eggs_layout_container.setGeometry(QtCore.QRect(600, 100, 221, 80))
        self.eggs_layout_container.setStyleSheet("background-color: transparent;")
        self.eggs_layout_container.setObjectName("eggs_layout_container")
        eggs_layout = QtWidgets.QHBoxLayout()
        eggs_layout.addWidget(self.eggs_available)
        self.eggs_layout_container.setLayout(eggs_layout)
        eggs_layout.setAlignment(self.eggs_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.eggs_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.eggs_available.setObjectName("eggs_available")

        self.butter_container = QtWidgets.QWidget(self.centralwidget)
        self.butter_container.setGeometry(QtCore.QRect(850, 100, 221, 191))
        self.butter_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                            "background-color: rgb(150, 114, 89);\n"
                                            "border-radius: 20px; ")
        self.butter_container.setObjectName("butter_container")

        self.butter_line_bg = QtWidgets.QWidget(self.butter_container)
        self.butter_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.butter_line_bg.setStyleSheet("border: transparent;\n"
                                          "background-color: rgb(219, 193, 172);\n"
                                          "border-radius: 0px; ")
        self.butter_line_bg.setObjectName("butter_line_bg")

        self.butter_available = QtWidgets.QLabel(self.butter_container)
        self.butter_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.butter_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.butter_layout_container.setGeometry(QtCore.QRect(850, 100, 221, 80))
        self.butter_layout_container.setStyleSheet("background-color: transparent;")
        self.butter_layout_container.setObjectName("butter_layout_container")

        butter_layout = QtWidgets.QHBoxLayout()
        butter_layout.addWidget(self.butter_available)
        self.butter_layout_container.setLayout(butter_layout)
        butter_layout.setAlignment(self.butter_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.butter_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "font: 600 25pt \"Comic Sans MS\";\n"
                                            "border: transparent;\n"
                                            "background-color: transparent;")
        self.butter_available.setObjectName("butter_available")

        self.butter_name = QtWidgets.QLabel(self.butter_container)
        self.butter_name.setGeometry(QtCore.QRect(70, 140, 171, 31))
        self.butter_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                       "font: 600 14pt \"Comic Sans MS\";\n"
                                       "border: transparent;\n"
                                       "background-color: transparent;")
        self.butter_name.setObjectName("butter_name")

        self.butter_pic = QtWidgets.QLabel(self.centralwidget)
        self.butter_pic.setGeometry(QtCore.QRect(915, 145, 86, 96))
        self.butter_pic.setStyleSheet("background-color: transparent;")
        self.butter_pic.setText("")
        self.butter_pic.setPixmap(QtGui.QPixmap("img/butter.png"))
        self.butter_pic.setScaledContents(True)
        self.butter_pic.setObjectName("butter_pic")

        self.flour_container = QtWidgets.QWidget(self.centralwidget)
        self.flour_container.setGeometry(QtCore.QRect(1100, 100, 221, 191))
        self.flour_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                           "background-color: rgb(150, 114, 89);\n"
                                           "border-radius: 20px; ")
        self.flour_container.setObjectName("flour_container")

        self.flour_name = QtWidgets.QLabel(self.flour_container)
        self.flour_name.setGeometry(QtCore.QRect(85, 140, 170, 31))
        self.flour_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "font: 600 14pt \"Comic Sans MS\";\n"
                                      "border: transparent;\n"
                                      "background-color: transparent;")
        self.flour_name.setObjectName("flour_name")

        self.flour_line_bg = QtWidgets.QWidget(self.flour_container)
        self.flour_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.flour_line_bg.setStyleSheet("border: transparent;\n"
                                         "background-color: rgb(219, 193, 172);\n"
                                         "border-radius: 0px; ")
        self.flour_line_bg.setObjectName("flour_line_bg")

        self.flour_available = QtWidgets.QLabel(self.flour_container)
        self.flour_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.flour_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.flour_layout_container.setGeometry(QtCore.QRect(1100, 100, 221, 80))
        self.flour_layout_container.setStyleSheet("background-color: transparent;")
        self.flour_layout_container.setObjectName("flour_layout_container")

        flour_layout = QtWidgets.QHBoxLayout()
        flour_layout.addWidget(self.flour_available)
        self.flour_layout_container.setLayout(flour_layout)
        flour_layout.setAlignment(self.flour_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.flour_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                           "font: 600 25pt \"Comic Sans MS\";\n"
                                           "border: transparent;\n"
                                           "background-color: transparent;")
        self.flour_available.setObjectName("flour_available")

        self.flour_pic = QtWidgets.QLabel(self.centralwidget)
        self.flour_pic.setGeometry(QtCore.QRect(1175, 150, 76, 86))
        self.flour_pic.setStyleSheet("background-color: transparent;")
        self.flour_pic.setText("")
        self.flour_pic.setPixmap(QtGui.QPixmap("img/flour.png"))
        self.flour_pic.setScaledContents(True)
        self.flour_pic.setObjectName("flour_pic")

        self.large_cup_container = QtWidgets.QWidget(self.centralwidget)
        self.large_cup_container.setGeometry(QtCore.QRect(100, 100, 221, 191))
        self.large_cup_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.large_cup_container.setObjectName("large_cup_container")

        self.large_cup_line_bg = QtWidgets.QWidget(self.large_cup_container)
        self.large_cup_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.large_cup_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.large_cup_line_bg.setObjectName("large_cup_line_bg")

        self.large_cup_name = QtWidgets.QLabel(self.large_cup_container)
        self.large_cup_name.setGeometry(QtCore.QRect(55, 140, 195, 31))
        self.large_cup_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.large_cup_name.setObjectName("large_cup_name")

        self.large_cup_pic = QtWidgets.QLabel(self.centralwidget)
        self.large_cup_pic.setGeometry(QtCore.QRect(170, 150, 86, 96))
        self.large_cup_pic.setStyleSheet("background-color: transparent;")
        self.large_cup_pic.setText("")
        self.large_cup_pic.setPixmap(QtGui.QPixmap("img/paper-cup.png"))
        self.large_cup_pic.setScaledContents(True)
        self.large_cup_pic.setObjectName("large_cup_pic")

        self.large_cup_available = QtWidgets.QLabel(self.large_cup_container)
        self.large_cup_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.large_cup_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.large_cup_layout_container.setGeometry(QtCore.QRect(100, 100, 221, 80))
        self.large_cup_layout_container.setStyleSheet("background-color: transparent;")
        self.large_cup_layout_container.setObjectName("large_cup_layout_container")
        large_cup_layout = QtWidgets.QHBoxLayout()
        large_cup_layout.addWidget(self.large_cup_available)
        self.large_cup_layout_container.setLayout(large_cup_layout)
        large_cup_layout.setAlignment(self.large_cup_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.large_cup_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.large_cup_available.setObjectName("large_cup_available")

        self.medium_cup_container = QtWidgets.QWidget(self.centralwidget)
        self.medium_cup_container.setGeometry(QtCore.QRect(350, 100, 221, 191))
        self.medium_cup_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.medium_cup_container.setObjectName("medium_cup_container")

        self.medium_cup_line_bg = QtWidgets.QWidget(self.medium_cup_container)
        self.medium_cup_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.medium_cup_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.medium_cup_line_bg.setObjectName("medium_cup_line_bg")

        self.medium_cup_name = QtWidgets.QLabel(self.medium_cup_container)
        self.medium_cup_name.setGeometry(QtCore.QRect(45, 140, 170, 31))
        self.medium_cup_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.medium_cup_name.setObjectName("medium_cup_name")

        self.medium_cup_pic = QtWidgets.QLabel(self.centralwidget)
        self.medium_cup_pic.setGeometry(QtCore.QRect(425, 155, 76, 86))
        self.medium_cup_pic.setStyleSheet("background-color: transparent;")
        self.medium_cup_pic.setText("")
        self.medium_cup_pic.setPixmap(QtGui.QPixmap("img/paper-cup.png"))
        self.medium_cup_pic.setScaledContents(True)
        self.medium_cup_pic.setObjectName("medium_cup_pic")

        self.medium_cup_available = QtWidgets.QLabel(self.medium_cup_container)
        self.medium_cup_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.medium_cup_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.medium_cup_layout_container.setGeometry(QtCore.QRect(350, 100, 221, 80))
        self.medium_cup_layout_container.setStyleSheet("background-color: transparent;")
        self.medium_cup_layout_container.setObjectName("medium_cup_layout_container")
        medium_cup_layout = QtWidgets.QHBoxLayout()
        medium_cup_layout.addWidget(self.medium_cup_available)
        self.medium_cup_layout_container.setLayout(medium_cup_layout)
        medium_cup_layout.setAlignment(self.medium_cup_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.medium_cup_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.medium_cup_available.setObjectName("medium_cup_available")

        self.small_cup_container = QtWidgets.QWidget(self.centralwidget)
        self.small_cup_container.setGeometry(QtCore.QRect(600, 100, 221, 191))
        self.small_cup_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.small_cup_container.setObjectName("small_cup_container")

        self.small_cup_line_bg = QtWidgets.QWidget(self.small_cup_container)
        self.small_cup_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.small_cup_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.small_cup_line_bg.setObjectName("small_cup_line_bg")

        self.small_cup_name = QtWidgets.QLabel(self.small_cup_container)
        self.small_cup_name.setGeometry(QtCore.QRect(55, 140, 120, 31))
        self.small_cup_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.small_cup_name.setObjectName("small_cup_name")

        self.small_cup_pic = QtWidgets.QLabel(self.centralwidget)
        self.small_cup_pic.setGeometry(QtCore.QRect(675, 160, 66, 76))
        self.small_cup_pic.setStyleSheet("background-color: transparent;")
        self.small_cup_pic.setText("")
        self.small_cup_pic.setPixmap(QtGui.QPixmap("img/paper-cup.png"))
        self.small_cup_pic.setScaledContents(True)
        self.small_cup_pic.setObjectName("small_cup_pic")

        self.small_cup_available = QtWidgets.QLabel(self.small_cup_container)
        self.small_cup_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.small_cup_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.small_cup_layout_container.setGeometry(QtCore.QRect(600, 100, 221, 80))
        self.small_cup_layout_container.setStyleSheet("background-color: transparent;")
        self.small_cup_layout_container.setObjectName("small_cup_layout_container")
        small_cup_layout = QtWidgets.QHBoxLayout()
        small_cup_layout.addWidget(self.small_cup_available)
        self.small_cup_layout_container.setLayout(small_cup_layout)
        small_cup_layout.setAlignment(self.small_cup_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.small_cup_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.small_cup_available.setObjectName("small_cup_available")

        self.cup_carrier_container = QtWidgets.QWidget(self.centralwidget)
        self.cup_carrier_container.setGeometry(QtCore.QRect(850, 100, 221, 191))
        self.cup_carrier_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                                 "background-color: rgb(150, 114, 89);\n"
                                                 "border-radius: 20px; ")
        self.cup_carrier_container.setObjectName("cup_carrier_container")

        self.cup_carrier_line_bg = QtWidgets.QWidget(self.cup_carrier_container)
        self.cup_carrier_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.cup_carrier_line_bg.setStyleSheet("border: transparent;\n"
                                               "background-color: rgb(219, 193, 172);\n"
                                               "border-radius: 0px; ")
        self.cup_carrier_line_bg.setObjectName("cup_carrier_line_bg")

        self.cup_carrier_available = QtWidgets.QLabel(self.cup_carrier_container)
        self.cup_carrier_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.cup_carrier_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.cup_carrier_layout_container.setGeometry(QtCore.QRect(850, 100, 221, 80))
        self.cup_carrier_layout_container.setStyleSheet("background-color: transparent;")
        self.cup_carrier_layout_container.setObjectName("cup_carrier_layout_container")

        cup_carrier_layout = QtWidgets.QHBoxLayout()
        cup_carrier_layout.addWidget(self.cup_carrier_available)
        self.cup_carrier_layout_container.setLayout(cup_carrier_layout)
        cup_carrier_layout.setAlignment(self.cup_carrier_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.cup_carrier_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "font: 600 25pt \"Comic Sans MS\";\n"
                                                 "border: transparent;\n"
                                                 "background-color: transparent;")
        self.cup_carrier_available.setObjectName("cup_carrier_available")

        self.cup_carrier_name = QtWidgets.QLabel(self.cup_carrier_container)
        self.cup_carrier_name.setGeometry(QtCore.QRect(48, 140, 171, 31))
        self.cup_carrier_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                            "font: 600 14pt \"Comic Sans MS\";\n"
                                            "border: transparent;\n"
                                            "background-color: transparent;")
        self.cup_carrier_name.setObjectName("cup_carrier_name")

        self.cup_carrier_pic = QtWidgets.QLabel(self.centralwidget)
        self.cup_carrier_pic.setGeometry(QtCore.QRect(925, 155, 76, 86))
        self.cup_carrier_pic.setStyleSheet("background-color: transparent;")
        self.cup_carrier_pic.setText("")
        self.cup_carrier_pic.setPixmap(QtGui.QPixmap("img/cup-carrier.png"))
        self.cup_carrier_pic.setScaledContents(True)
        self.cup_carrier_pic.setObjectName("cup_carrier_pic")

        self.paper_straws_container = QtWidgets.QWidget(self.centralwidget)
        self.paper_straws_container.setGeometry(QtCore.QRect(1100, 100, 221, 191))
        self.paper_straws_container.setStyleSheet("border: 3px solid rgb(75,53,38);\n"
                                                  "background-color: rgb(150, 114, 89);\n"
                                                  "border-radius: 20px; ")
        self.paper_straws_container.setObjectName("paper_straws_container")

        self.paper_straws_name = QtWidgets.QLabel(self.paper_straws_container)
        self.paper_straws_name.setGeometry(QtCore.QRect(37, 140, 170, 31))
        self.paper_straws_name.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "font: 600 14pt \"Comic Sans MS\";\n"
                                             "border: transparent;\n"
                                             "background-color: transparent;")
        self.paper_straws_name.setObjectName("paper_straws_name")

        self.paper_straws_line_bg = QtWidgets.QWidget(self.paper_straws_container)
        self.paper_straws_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.paper_straws_line_bg.setStyleSheet("border: transparent;\n"
                                                "background-color: rgb(219, 193, 172);\n"
                                                "border-radius: 0px; ")
        self.paper_straws_line_bg.setObjectName("paper_straws_line_bg")

        self.paper_straws_available = QtWidgets.QLabel(self.paper_straws_container)
        self.paper_straws_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.paper_straws_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.paper_straws_layout_container.setGeometry(QtCore.QRect(1100, 100, 221, 80))
        self.paper_straws_layout_container.setStyleSheet("background-color: transparent;")
        self.paper_straws_layout_container.setObjectName("paper_straws_layout_container")

        paper_straws_layout = QtWidgets.QHBoxLayout()
        paper_straws_layout.addWidget(self.paper_straws_available)
        self.paper_straws_layout_container.setLayout(paper_straws_layout)
        paper_straws_layout.setAlignment(self.paper_straws_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.paper_straws_available.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "font: 600 25pt \"Comic Sans MS\";\n"
                                                  "border: transparent;\n"
                                                  "background-color: transparent;")
        self.paper_straws_available.setObjectName("paper_straws_available")

        self.paper_straws_pic = QtWidgets.QLabel(self.centralwidget)
        self.paper_straws_pic.setGeometry(QtCore.QRect(1175, 155, 76, 86))
        self.paper_straws_pic.setStyleSheet("background-color: transparent;")
        self.paper_straws_pic.setText("")
        self.paper_straws_pic.setPixmap(QtGui.QPixmap("img/paper-straw.png"))
        self.paper_straws_pic.setScaledContents(True)
        self.paper_straws_pic.setObjectName("paper_straws_pic")

        self.tissue_container = QtWidgets.QWidget(self.centralwidget)
        self.tissue_container.setGeometry(QtCore.QRect(100, 100, 221, 191))
        self.tissue_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.tissue_container.setObjectName("tissue_container")

        self.tissue_line_bg = QtWidgets.QWidget(self.tissue_container)
        self.tissue_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.tissue_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.tissue_line_bg.setObjectName("tissue_line_bg")

        self.tissue_name = QtWidgets.QLabel(self.tissue_container)
        self.tissue_name.setGeometry(QtCore.QRect(77, 140, 195, 31))
        self.tissue_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.tissue_name.setObjectName("tissue_name")

        self.tissue_pic = QtWidgets.QLabel(self.centralwidget)
        self.tissue_pic.setGeometry(QtCore.QRect(170, 150, 86, 96))
        self.tissue_pic.setStyleSheet("background-color: transparent;")
        self.tissue_pic.setText("")
        self.tissue_pic.setPixmap(QtGui.QPixmap("img/tissue.png"))
        self.tissue_pic.setScaledContents(True)
        self.tissue_pic.setObjectName("tissue_pic")

        self.tissue_available = QtWidgets.QLabel(self.tissue_container)
        self.tissue_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.tissue_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.tissue_layout_container.setGeometry(QtCore.QRect(100, 100, 221, 80))
        self.tissue_layout_container.setStyleSheet("background-color: transparent;")
        self.tissue_layout_container.setObjectName("tissue_layout_container")
        tissue_layout = QtWidgets.QHBoxLayout()
        tissue_layout.addWidget(self.tissue_available)
        self.tissue_layout_container.setLayout(tissue_layout)
        tissue_layout.setAlignment(self.tissue_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.tissue_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.tissue_available.setObjectName("tissue_available")

        self.mugs_container = QtWidgets.QWidget(self.centralwidget)
        self.mugs_container.setGeometry(QtCore.QRect(350, 100, 221, 191))
        self.mugs_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.mugs_container.setObjectName("mugs_container")

        self.mugs_line_bg = QtWidgets.QWidget(self.mugs_container)
        self.mugs_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.mugs_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.mugs_line_bg.setObjectName("mugs_line_bg")

        self.mugs_name = QtWidgets.QLabel(self.mugs_container)
        self.mugs_name.setGeometry(QtCore.QRect(82, 140, 170, 31))
        self.mugs_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.mugs_name.setObjectName("mugs_name")

        self.mugs_pic = QtWidgets.QLabel(self.centralwidget)
        self.mugs_pic.setGeometry(QtCore.QRect(420, 155, 76, 86))
        self.mugs_pic.setStyleSheet("background-color: transparent;")
        self.mugs_pic.setText("")
        self.mugs_pic.setPixmap(QtGui.QPixmap("img/mugs.png"))
        self.mugs_pic.setScaledContents(True)
        self.mugs_pic.setObjectName("mugs_pic")

        self.mugs_available = QtWidgets.QLabel(self.mugs_container)
        self.mugs_available.setGeometry(QtCore.QRect(0, 0, 161, 60))
        self.mugs_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.mugs_layout_container.setGeometry(QtCore.QRect(350, 100, 221, 80))
        self.mugs_layout_container.setStyleSheet("background-color: transparent;")
        self.mugs_layout_container.setObjectName("mugs_layout_container")
        mugs_layout = QtWidgets.QHBoxLayout()
        mugs_layout.addWidget(self.mugs_available)
        self.mugs_layout_container.setLayout(mugs_layout)
        mugs_layout.setAlignment(self.mugs_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.mugs_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.mugs_available.setObjectName("mugs_available")

        self.coffee_stirrer_container = QtWidgets.QWidget(self.centralwidget)
        self.coffee_stirrer_container.setGeometry(QtCore.QRect(600, 100, 221, 191))
        self.coffee_stirrer_container.setStyleSheet(
            "border: 3px solid rgb(75,53,38);\n"
            "background-color: rgb(150, 114, 89);\n"
            "border-radius: 20px;"
        )
        self.coffee_stirrer_container.setObjectName("coffee_stirrer_container")

        self.coffee_stirrer_line_bg = QtWidgets.QWidget(self.coffee_stirrer_container)
        self.coffee_stirrer_line_bg.setGeometry(QtCore.QRect(3, 80, 214, 41))
        self.coffee_stirrer_line_bg.setStyleSheet(
            "border: transparent;\n"
            "background-color: rgb(219, 193, 172);\n"
            "border-radius: 0px;"
        )
        self.coffee_stirrer_line_bg.setObjectName("coffee_stirrer_line_bg")

        self.coffee_stirrer_name = QtWidgets.QLabel(self.coffee_stirrer_container)
        self.coffee_stirrer_name.setGeometry(QtCore.QRect(30, 140, 180, 31))
        self.coffee_stirrer_name.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 14pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.coffee_stirrer_name.setObjectName("coffee_stirrer_name")

        self.coffee_stirrer_pic = QtWidgets.QLabel(self.centralwidget)
        self.coffee_stirrer_pic.setGeometry(QtCore.QRect(675, 160, 76, 86))
        self.coffee_stirrer_pic.setStyleSheet("background-color: transparent;")
        self.coffee_stirrer_pic.setText("")
        self.coffee_stirrer_pic.setPixmap(QtGui.QPixmap("img/coffee_stirrer.png"))
        self.coffee_stirrer_pic.setScaledContents(True)
        self.coffee_stirrer_pic.setObjectName("coffee_stirrer_pic")

        self.coffee_stirrer_available = QtWidgets.QLabel(self.coffee_stirrer_container)
        self.coffee_stirrer_available.setGeometry(QtCore.QRect(40, 5, 161, 60))
        self.coffee_stirrer_layout_container = QtWidgets.QWidget(self.centralwidget)
        self.coffee_stirrer_layout_container.setGeometry(QtCore.QRect(600, 100, 221, 80))
        self.coffee_stirrer_layout_container.setStyleSheet("background-color: transparent;")
        self.coffee_stirrer_layout_container.setObjectName("coffee_stirrer_layout_container")
        coffee_stirrer_layout = QtWidgets.QHBoxLayout()
        coffee_stirrer_layout.addWidget(self.coffee_stirrer_available)
        self.coffee_stirrer_layout_container.setLayout(coffee_stirrer_layout)
        coffee_stirrer_layout.setAlignment(self.coffee_stirrer_available, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.coffee_stirrer_available.setStyleSheet(
            "color: rgb(255, 255, 255);\n"
            "font: 600 25pt \"Comic Sans MS\";\n"
            "border: transparent;\n"
            "background-color: transparent;"
        )
        self.coffee_stirrer_available.setObjectName("coffee_stirrer_available")

        self.update_container = QtWidgets.QWidget(self.centralwidget)
        self.update_container.setGeometry(QtCore.QRect(50, 400, 351, 441))
        self.update_container.setStyleSheet("border: 2px solid rgb(75,53,38); \n"
                                            "background-color: white;\n"
                                            "border-top-right-radius: 30px;\n"
                                            "border-bottom-left-radius: 30px;")
        self.update_container.setObjectName("update_container")
        self.update_stock_name_title = QtWidgets.QLabel(self.update_container)
        self.update_stock_name_title.setGeometry(QtCore.QRect(20, 40, 151, 41))
        self.update_stock_name_title.setStyleSheet("color: rgb(0, 0, 61);\n"
                                                   "font: 600 12pt \"Comic Sans MS\";\n"
                                                   "border: transparent;")
        self.update_stock_name_title.setObjectName("update_stock_name_title")
        self.update_quantity_title = QtWidgets.QLabel(self.update_container)
        self.update_quantity_title.setGeometry(QtCore.QRect(20, 130, 121, 41))
        self.update_quantity_title.setStyleSheet("color: rgb(0, 0, 61);\n"
                                                 "font: 600 12pt \"Comic Sans MS\";\n"
                                                 "border: transparent;")
        self.update_quantity_title.setObjectName("update_quantity_title")
        self.update_shelf_life_title = QtWidgets.QLabel(self.update_container)
        self.update_shelf_life_title.setGeometry(QtCore.QRect(20, 230, 211, 41))
        self.update_shelf_life_title.setStyleSheet("color: rgb(0, 0, 61);\n"
                                                   "font: 600 12pt \"Comic Sans MS\";\n"
                                                   "border: transparent;")
        self.update_shelf_life_title.setObjectName("update_shelf_life_title")
        self.update_unit_title = QtWidgets.QLabel(self.update_container)
        self.update_unit_title.setGeometry(QtCore.QRect(190, 130, 61, 41))
        self.update_unit_title.setStyleSheet("color: rgb(0, 0, 61);\n"
                                             "font: 600 12pt \"Comic Sans MS\";\n"
                                             "border: transparent;")
        self.update_unit_title.setObjectName("update_unit_title")
        self.update_unit = QtWidgets.QComboBox(self.update_container)
        self.update_unit.setGeometry(QtCore.QRect(190, 170, 141, 51))
        self.update_unit.setStyleSheet("border: 2px solid rgb(0, 0, 61); \n"
                                       "border-radius: 10px;  \n"
                                       "padding: 5px;\n"
                                       "background-color: white;\n"
                                       "color: rgb(0, 0, 61);\n"
                                       "font: 300 12pt \"Comic Sans MS\";")
        self.update_unit.setObjectName("update_unit")
        self.update_unit.addItem("")
        self.update_unit.addItem("")
        self.update_unit.addItem("")
        self.update_unit.addItem("")
        self.update_unit.addItem("")
        self.update_stock_name = QtWidgets.QLineEdit(self.update_container)
        self.update_stock_name.setGeometry(QtCore.QRect(20, 80, 311, 51))
        self.update_stock_name.setStyleSheet("border: 2px solid rgb(0, 0, 61); \n"
                                             "border-radius: 10px;  \n"
                                             "padding: 5px;\n"
                                             "background-color: white;\n"
                                             "font: 300 12pt \"Comic Sans MS\";")
        self.update_stock_name.setObjectName("update_stock_name")
        self.update_shelf_life = QtWidgets.QLineEdit(self.update_container)
        self.update_shelf_life.setGeometry(QtCore.QRect(20, 270, 151, 51))
        self.update_shelf_life.setPlaceholderText("if applicable")
        self.update_shelf_life.setStyleSheet("border: 2px solid rgb(0, 0, 61); \n"
                                             "border-radius: 10px;  \n"
                                             "padding: 5px;\n"
                                             "background-color: white;\n"
                                             "font: 300 12pt \"Comic Sans MS\";")
        self.update_shelf_life.setObjectName("update_shelf_life")

        self.update_shelf_life_days = QtWidgets.QLabel(self.update_container)
        self.update_shelf_life_days.setGeometry(QtCore.QRect(123, 228, 151, 51))
        self.update_shelf_life_days.setStyleSheet("color: rgb(0, 0, 61);\n"
                                                "background-color: transparent;\n"
                                                "font: 600 8pt \"Comic Sans MS\";\n"
                                                "border: transparent;"
                                                )
        self.update_shelf_life_days.setObjectName("update_shelf_life_days")
        self.update_btn = QtWidgets.QPushButton(self.update_container)
        self.update_btn.setGeometry(QtCore.QRect(120, 350, 111, 51))
        self.update_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.update_btn.setStyleSheet("background-color: rgb(75, 53, 38);\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "font: 600 14pt \"Comic Sans MS\";")
        self.update_btn.setObjectName("update_btn")
        self.update_quantity = QtWidgets.QLineEdit(self.update_container)
        self.update_quantity.setGeometry(QtCore.QRect(20, 170, 141, 51))
        self.update_quantity.setMinimumSize(QtCore.QSize(111, 42))
        self.update_quantity.setStyleSheet("border: 2px solid rgb(0, 0, 61); \n"
                                           "border-radius: 10px;  \n"
                                           "padding: 5px;\n"
                                           "background-color: white;\n"
                                           "font: 300 12pt \"Comic Sans MS\";")
        self.update_quantity.setObjectName("update_quantity")
        self.update_date_added = QtWidgets.QDateEdit(self.update_container)
        self.update_date_added.setGeometry(QtCore.QRect(190, 270, 141, 51))
        self.update_date_added.setCalendarPopup(True)
        self.update_date_added.setDate(QDate.currentDate())
        self.update_date_added.setDisplayFormat('MM-dd-yyyy')
        self.update_date_added.setStyleSheet("""
            color: rgb(0, 0, 61);
            font: 300 11pt "Comic Sans MS";
            border: 2px solid rgb(0, 0, 61);
            border-radius: 10px;
            padding: 5px;
        """)
        calendar_widgetU = self.update_date_added.calendarWidget()
        calendar_widgetU.setStyleSheet(
                "color: rgb(75, 53, 38); /* Text color */\n"
                "background-color: rgb(219, 193, 172); /* Background color */\n"
                "font: 600 12pt \"Comic Sans MS\";\n"
                "border: transparent;"
                "border-radius: 0px;\n"
                "selection-background-color: rgb(0, 0, 61); /* Color for selected date */\n"
                "selection-color: white; /* Text color for selected date */\n"
                "padding: 0px;\n"
        )
        self.update_date_added.setObjectName("update_date_added")
        self.update_date_added_title = QtWidgets.QLabel(self.update_container)
        self.update_date_added_title.setGeometry(QtCore.QRect(190, 230, 211, 41))
        self.update_date_added_title.setStyleSheet("color: rgb(0, 0, 61);\n"
                                                   "background-color: transparent;\n"
                                                   "font: 600 12pt \"Comic Sans MS\";\n"
                                                   "border: transparent;")
        self.update_date_added_title.setObjectName("update_date_added_title")
        self.add_container = QtWidgets.QWidget(self.centralwidget)
        self.add_container.setGeometry(QtCore.QRect(50, 400, 351, 441))
        self.add_container.setStyleSheet("border: 2px solid rgb(75,53,38); \n"
"background-color: white;\n"
"border-top-right-radius: 30px;\n"
"border-bottom-left-radius: 30px;")
        self.add_container.setObjectName("add_container")
        self.label = QtWidgets.QLabel(self.add_container)
        self.label.setGeometry(QtCore.QRect(20, 40, 151, 41))
        self.label.setStyleSheet("color: rgb(0, 0, 61);\n"
"font: 600 12pt \"Comic Sans MS\";\n"
"border: transparent;")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.add_container)
        self.label_2.setGeometry(QtCore.QRect(20, 130, 121, 41))
        self.label_2.setStyleSheet("color: rgb(0, 0, 61);\n"
"font: 600 12pt \"Comic Sans MS\";\n"
"border: transparent;")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.add_container)
        self.label_3.setGeometry(QtCore.QRect(20, 230, 211, 41))
        self.label_3.setStyleSheet("color: rgb(0, 0, 61);\n"
"font: 600 12pt \"Comic Sans MS\";\n"
"border: transparent;")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.add_container)
        self.label_4.setGeometry(QtCore.QRect(190, 130, 61, 41))
        self.label_4.setStyleSheet("color: rgb(0, 0, 61);\n"
"font: 600 12pt \"Comic Sans MS\";\n"
"border: transparent;")
        self.label_4.setObjectName("label_4")
        self.add_unit = QtWidgets.QComboBox(self.add_container)
        self.add_unit.setGeometry(QtCore.QRect(190, 170, 141, 51))
        self.add_unit.setStyleSheet("border: 2px solid rgb(0, 0, 61); \n"
"border-radius: 10px;  \n"
"padding: 5px;\n"
"background-color: white;\n"
"color: rgb(0, 0, 61);\n"
"font: 300 12pt \"Comic Sans MS\";")
        self.add_unit.setObjectName("add_unit")
        self.add_unit.addItem("")
        self.add_unit.addItem("")
        self.add_unit.addItem("")
        self.add_unit.addItem("")
        self.add_unit.addItem("")
        self.add_stock_name = QtWidgets.QLineEdit(self.add_container)
        self.add_stock_name.setGeometry(QtCore.QRect(20, 80, 311, 51))
        self.add_stock_name.setStyleSheet("border: 2px solid rgb(0, 0, 61); \n"
"border-radius: 10px;  \n"
"padding: 5px;\n"
"background-color: white;\n"
"font: 300 12pt \"Comic Sans MS\";")
        self.add_stock_name.setObjectName("add_stock_name")
        self.add_shelf_life = QtWidgets.QLineEdit(self.add_container)
        self.add_shelf_life.setGeometry(QtCore.QRect(20, 270, 151, 51))
        self.add_shelf_life.setPlaceholderText("if applicable")
        self.add_shelf_life.setStyleSheet("border: 2px solid rgb(0, 0, 61); \n"
"border-radius: 10px;  \n"
"padding: 5px;\n"
"background-color: white;\n"
"font: 300 12pt \"Comic Sans MS\";")
        self.add_date_added = QtWidgets.QDateEdit(self.add_container)
        self.add_date_added.setGeometry(QtCore.QRect(190, 270, 141, 51))
        self.add_date_added.setCalendarPopup(True)
        self.add_date_added.setDate(QDate.currentDate())
        self.add_date_added.setDisplayFormat('MM-dd-yyyy')
        self.add_date_added.setStyleSheet("""
            color: rgb(0, 0, 61);
            font: 300 11pt "Comic Sans MS";
            border: 2px solid rgb(0, 0, 61);
            border-radius: 10px;
            padding: 5px;
        """)
        calendar_widget = self.add_date_added.calendarWidget()
        calendar_widget.setStyleSheet(
                "color: rgb(75, 53, 38); /* Text color */\n"
                "background-color: rgb(219, 193, 172); /* Background color */\n"
                "font: 600 12pt \"Comic Sans MS\";\n"
                "border: transparent;"
                "border-radius: 0px;\n"
                "selection-background-color: rgb(0, 0, 61); /* Color for selected date */\n"
                "selection-color: white; /* Text color for selected date */\n"
                "padding: 0px;\n"
        )
        self.add_date_added.setObjectName("add_date_added")
        self.add_date_added_title = QtWidgets.QLabel(self.add_container)
        self.add_date_added_title.setGeometry(QtCore.QRect(190, 230, 211, 41))
        self.add_date_added_title.setStyleSheet("color: rgb(0, 0, 61);\n"
                                                "background-color: transparent;\n"
                                                "font: 600 12pt \"Comic Sans MS\";\n"
                                                "border: transparent;"
                                                )
        self.add_date_added_title.setObjectName("add_date_added_title")
        self.add_shelf_life_days = QtWidgets.QLabel(self.add_container)
        self.add_shelf_life_days.setGeometry(QtCore.QRect(123, 233, 211, 41))
        self.add_shelf_life_days.setStyleSheet("color: rgb(0, 0, 61);\n"
                                                "background-color: transparent;\n"
                                                "font: 600 8pt \"Comic Sans MS\";\n"
                                                "border: transparent;"
                                                )
        self.add_shelf_life_days.setObjectName("add_shelf_life_days")
        self.add_shelf_life.setObjectName("add_shelf_life")
        self.add_btn = QtWidgets.QPushButton(self.add_container)
        self.add_btn.setGeometry(QtCore.QRect(120, 350, 111, 51))
        self.add_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.add_btn.setStyleSheet("background-color: rgb(75, 53, 38);\n"
"color: rgb(255, 255, 255);\n"
"font: 600 14pt \"Comic Sans MS\";")
        self.add_btn.setObjectName("add_btn")
        self.add_quantity = QtWidgets.QLineEdit(self.add_container)
        self.add_quantity.setGeometry(QtCore.QRect(20, 170, 141, 51))
        self.add_quantity.setMinimumSize(QtCore.QSize(111, 42))
        self.add_quantity.setStyleSheet("border: 2px solid rgb(0, 0, 61); \n"
"border-radius: 10px;  \n"
"padding: 5px;\n"
"background-color: white;\n"
"font: 300 12pt \"Comic Sans MS\";")
        self.add_quantity.setObjectName("add_quantity")
        self.sort_combo = QtWidgets.QComboBox(self.centralwidget)
        self.sort_combo.setGeometry(QtCore.QRect(1113, 354, 235, 41))
        self.sort_combo.setStyleSheet("border: 2px solid rgb(75,53,38); \n"
                                      "border-radius: 10px;  \n"
                                      "padding: 5px;\n"
                                      "font: 300 10pt \"Comic Sans MS\";")
        self.sort_combo.setObjectName("sort_combo")
        self.sort_combo.addItem("Default")
        self.sort_combo.addItem("Date Added (Newest)")
        self.sort_combo.addItem("Date Added (Oldest)")
        self.sort_combo.addItem("Expiration Date (Soonest)")
        self.sort_combo.addItem("Expiration Date (Latest)")
        self.search_field = QtWidgets.QLineEdit(self.centralwidget)
        self.search_field.setGeometry(QtCore.QRect(430, 355, 320, 41))
        self.search_field.setStyleSheet("border: 2px solid rgb(75,53,38); \n"
                                        "border-top-left-radius: 10px;  \n"
                                        "border-bottom-left-radius: 10px;  \n"
                                        "padding: 5px;\n"
                                        "font: 300 12pt \"Comic Sans MS\";")
        self.search_field.setFrame(True)
        self.search_field.setPlaceholderText("Search for a stock")
        self.search_field.setObjectName("search_field")
        self.search_btn = QtWidgets.QPushButton(self.centralwidget)
        self.search_btn.setGeometry(QtCore.QRect(710, 355, 51, 41))
        self.search_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.search_btn.setStyleSheet("background-color: rgb(75, 53, 38);\n"
                                      "border-top-right-radius: 10px;  \n"
                                      "border-bottom-right-radius: 10px;  \n"
                                      "")
        self.search_btn.setText("")
        self.search_btn.setObjectName("search_btn")
        search_icon = QtGui.QIcon("img/search (1).png")
        self.search_btn.setIcon(search_icon)
        self.search_btn.setIconSize(QtCore.QSize(30, 30))
        self.delete_btn = QtWidgets.QPushButton(self.centralwidget)
        self.delete_btn.setEnabled(False)
        self.delete_btn.setGeometry(QtCore.QRect(1060, 355, 51, 41))
        self.delete_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.delete_btn.setStyleSheet("background-color: transparent;")
        self.delete_btn.setText("")
        self.delete_btn.setObjectName("delete_btn")
        delete_icon = QtGui.QIcon("img/trash-can.png")
        self.delete_btn.setIcon(delete_icon)
        self.delete_btn.setIconSize(QtCore.QSize(30, 30))
        self.right_btn1 = QtWidgets.QPushButton(self.centralwidget)
        self.right_btn1.setGeometry(QtCore.QRect(1340, 140, 51, 111))
        self.right_btn1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        right_icon1 = QtGui.QIcon("img/right-arrow.png")
        self.right_btn1.setIcon(right_icon1)
        self.right_btn1.setText("")
        self.right_btn1.setObjectName("right_btn1")
        self.right_btn2 = QtWidgets.QPushButton(self.centralwidget)
        self.right_btn2.setGeometry(QtCore.QRect(1340, 140, 51, 111))
        self.right_btn2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        right_icon2 = QtGui.QIcon("img/right-arrow.png")
        self.right_btn2.setIcon(right_icon2)
        self.right_btn2.setText("")
        self.right_btn2.setObjectName("right_btn2")
        self.right_btn3 = QtWidgets.QPushButton(self.centralwidget)
        self.right_btn3.setGeometry(QtCore.QRect(1340, 140, 51, 111))
        self.right_btn3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        right_btn3 = QtGui.QIcon("img/right-arrow.png")
        self.right_btn3.setIcon(right_btn3)
        self.right_btn3.setText("")
        self.right_btn3.setObjectName("right_btn3")
        self.right_btn4 = QtWidgets.QPushButton(self.centralwidget)
        self.right_btn4.setGeometry(QtCore.QRect(1340, 140, 51, 111))
        self.right_btn4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        right_icon4 = QtGui.QIcon("img/right-arrow.png")
        self.right_btn4.setIcon(right_icon4)
        self.right_btn4.setText("")
        self.right_btn4.setObjectName("right_btn1")
        self.right_btn5 = QtWidgets.QPushButton(self.centralwidget)
        self.right_btn5.setGeometry(QtCore.QRect(1340, 140, 51, 111))
        self.right_btn5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        right_icon5 = QtGui.QIcon("img/right-arrow.png")
        self.right_btn5.setIcon(right_icon5)
        self.right_btn5.setText("")
        self.right_btn5.setObjectName("right_btn1")
        self.left_btn1 = QtWidgets.QPushButton(self.centralwidget)
        self.left_btn1.setGeometry(QtCore.QRect(25, 140, 51, 111))
        self.left_btn1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        left_icon1 = QtGui.QIcon("img/left-arrow.png")
        self.left_btn1.setIcon(left_icon1)
        self.left_btn1.setText("")
        self.left_btn1.setObjectName("left_btn1")
        self.left_btn2 = QtWidgets.QPushButton(self.centralwidget)
        self.left_btn2.setGeometry(QtCore.QRect(25, 140, 51, 111))
        self.left_btn2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        left_icon2 = QtGui.QIcon("img/left-arrow.png")
        self.left_btn2.setIcon(left_icon2)
        self.left_btn2.setText("")
        self.left_btn2.setObjectName("left_btn2")
        self.left_btn3 = QtWidgets.QPushButton(self.centralwidget)
        self.left_btn3.setGeometry(QtCore.QRect(25, 140, 51, 111))
        self.left_btn3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        left_icon3 = QtGui.QIcon("img/left-arrow.png")
        self.left_btn3.setIcon(left_icon3)
        self.left_btn3.setText("")
        self.left_btn3.setObjectName("left_btn3")
        self.left_btn4 = QtWidgets.QPushButton(self.centralwidget)
        self.left_btn4.setGeometry(QtCore.QRect(25, 140, 51, 111))
        self.left_btn4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        left_icon4 = QtGui.QIcon("img/left-arrow.png")
        self.left_btn4.setIcon(left_icon4)
        self.left_btn4.setText("")
        self.left_btn4.setObjectName("left_btn1")
        self.left_btn5 = QtWidgets.QPushButton(self.centralwidget)
        self.left_btn5.setGeometry(QtCore.QRect(25, 140, 51, 111))
        self.left_btn5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        left_icon5 = QtGui.QIcon("img/left-arrow.png")
        self.left_btn5.setIcon(left_icon5)
        self.left_btn5.setText("")
        self.left_btn5.setObjectName("left_btn1")

        self.shelf_life_info = QtWidgets.QWidget(self.centralwidget)
        self.shelf_life_info.setGeometry(QtCore.QRect(210, 50, 500, 700))
        self.shelf_life_info.setStyleSheet("border: 2px solid rgb(75,53,38); \n"
                                           "background-color: white;\n"
                                           "border-top-left-radius: 30px;\n"
                                           "border-bottom-right-radius: 30px;\n"
                                           "color: rgb(0, 0, 61);\n"
                                           "font: 600 8pt \"Comic Sans MS\";")
        self.shelf_life_info.setObjectName("shelf_life_info")
        self.shelf_life_info_label = QtWidgets.QLabel(self.shelf_life_info)
        self.shelf_life_info_label.setGeometry(QtCore.QRect(30, 23, 480, 700))
        self.shelf_life_info_label.setStyleSheet("border: transparent; \n"
                                                 "border-top-left-radius: 0;\n"
                                                 "border-bottom-right-radius: 0;\n"
                                                 "background-color: transparent;")
        self.shelf_life_info_label.setObjectName("shelf_life_info_label")
        self.close_btn = QtWidgets.QPushButton(self.shelf_life_info)
        self.close_btn.setEnabled(True)
        self.close_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.close_btn.setGeometry(QtCore.QRect(450, 10, 31, 21))
        self.close_btn.setStyleSheet("background-color: rgb(255, 40, 21);\n"
                                     "border: 2px solid rgb(106, 0, 0); ")
        self.close_btn.setObjectName("close_btn")
        self.shelf_life_info_btn = QtWidgets.QPushButton(self.add_container)
        self.shelf_life_info_btn.setGeometry(QtCore.QRect(144, 285, 21, 24))
        self.shelf_life_info_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.shelf_life_info_btn.setStyleSheet("border-radius: 10px;\n"
"font: 12pt \"Segoe UI\";\n"
"border-color: rgb(0, 0, 61);\n"
"color: rgb(0, 0, 61);")
        self.shelf_life_info_btn.setObjectName("shelf_life_info_btn")

        self.shelf_life_info_btn1 = QtWidgets.QPushButton(self.update_container)
        self.shelf_life_info_btn1.setGeometry(QtCore.QRect(144, 285, 21, 24))
        self.shelf_life_info_btn1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.shelf_life_info_btn1.setStyleSheet("border-radius: 10px;\n"
                                               "font: 12pt \"Segoe UI\";\n"
                                               "border-color: rgb(0, 0, 61);\n"
                                               "color: rgb(0, 0, 61);")
        self.shelf_life_info_btn1.setObjectName("shelf_life_info_btn1")

        self.logout_btn = QtWidgets.QPushButton(self.widget_4)
        self.logout_btn.setGeometry(QtCore.QRect(1334, 13, 41, 41))
        self.logout_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.logout_btn.setText("")
        self.logout_btn.setObjectName("logout_btn")
        logout_icon = QtGui.QIcon("img/log-out.png")
        self.logout_btn.setIcon(logout_icon)

        self.coffee_container.raise_()
        self.coffee_layout_container.raise_()
        self.tableWidget.raise_()
        self.milk_container.raise_()
        self.milk_layout_container.raise_()
        self.sugar_container.raise_()
        self.choco_container.raise_()
        self.vanilla_container.raise_()
        self.update_container.raise_()
        self.add_container.raise_()
        self.coffee_pic.raise_()
        self.milk_pic.raise_()
        self.milk_available.raise_()
        self.sugar_pic.raise_()
        self.choco_pic.raise_()
        self.vanilla_pic.raise_()
        self.show_update.raise_()
        self.show_add.raise_()
        self.widget_4.raise_()
        self.tableWidget.raise_()
        self.update_container.raise_()
        self.add_container.raise_()
        self.sugar_layout_container.raise_()
        self.choco_layout_container.raise_()
        self.vanilla_layout_container.raise_()
        self.large_cup_pic.raise_()
        self.medium_cup_pic.raise_()
        self.shelf_life_info.raise_()

        self.add_container.setVisible(True)
        self.update_container.setVisible(False)

        self.left_btn1.setVisible(False)
        self.right_btn2.setVisible(False)
        self.left_btn2.setVisible(False)
        self.right_btn3.setVisible(False)
        self.left_btn3.setVisible(False)
        self.right_btn4.setVisible(False)
        self.left_btn4.setVisible(False)
        self.right_btn5.setVisible(False)
        self.left_btn5.setVisible(False)

        self.espresso_container.setVisible(False)
        self.espresso_pic.setVisible(False)
        self.espresso_available.setVisible(False)
        self.matcha_container.setVisible(False)
        self.matcha_pic.setVisible(False)
        self.matcha_available.setVisible(False)
        self.tea_container.setVisible(False)
        self.tea_pic.setVisible(False)
        self.tea_available.setVisible(False)
        self.caramel_container.setVisible(False)
        self.caramel_pic.setVisible(False)
        self.caramel_available.setVisible(False)
        self.hazelnut_container.setVisible(False)
        self.hazelnut_pic.setVisible(False)
        self.hazelnut_available.setVisible(False)

        self.cinnamon_container.setVisible(False)
        self.cinnamon_pic.setVisible(False)
        self.cinnamon_available.setVisible(False)
        self.whip_cream_container.setVisible(False)
        self.whip_cream_pic.setVisible(False)
        self.whip_cream_available.setVisible(False)
        self.honey_container.setVisible(False)
        self.honey_pic.setVisible(False)
        self.honey_available.setVisible(False)
        self.creamer_container.setVisible(False)
        self.creamer_pic.setVisible(False)
        self.creamer_available.setVisible(False)
        self.coconut_milk_container.setVisible(False)
        self.coconut_milk_pic.setVisible(False)
        self.coconut_milk_available.setVisible(False)

        self.yogurt_container.setVisible(False)
        self.yogurt_pic.setVisible(False)
        self.yogurt_available.setVisible(False)
        self.whey_protein_container.setVisible(False)
        self.whey_protein_pic.setVisible(False)
        self.whey_protein_available.setVisible(False)
        self.eggs_container.setVisible(False)
        self.eggs_pic.setVisible(False)
        self.eggs_available.setVisible(False)
        self.butter_container.setVisible(False)
        self.butter_pic.setVisible(False)
        self.butter_available.setVisible(False)
        self.flour_container.setVisible(False)
        self.flour_pic.setVisible(False)
        self.flour_available.setVisible(False)

        self.yogurt_container.setVisible(False)
        self.yogurt_pic.setVisible(False)
        self.yogurt_available.setVisible(False)
        self.whey_protein_container.setVisible(False)
        self.whey_protein_pic.setVisible(False)
        self.whey_protein_available.setVisible(False)
        self.eggs_container.setVisible(False)
        self.eggs_pic.setVisible(False)
        self.eggs_available.setVisible(False)
        self.butter_container.setVisible(False)
        self.butter_pic.setVisible(False)
        self.butter_available.setVisible(False)
        self.flour_container.setVisible(False)
        self.flour_pic.setVisible(False)
        self.flour_available.setVisible(False)

        self.large_cup_container.setVisible(False)
        self.large_cup_pic.setVisible(False)
        self.large_cup_available.setVisible(False)
        self.medium_cup_container.setVisible(False)
        self.medium_cup_pic.setVisible(False)
        self.medium_cup_available.setVisible(False)
        self.small_cup_container.setVisible(False)
        self.small_cup_pic.setVisible(False)
        self.small_cup_available.setVisible(False)
        self.cup_carrier_container.setVisible(False)
        self.cup_carrier_pic.setVisible(False)
        self.cup_carrier_available.setVisible(False)
        self.paper_straws_container.setVisible(False)
        self.paper_straws_pic.setVisible(False)
        self.paper_straws_available.setVisible(False)

        self.tissue_container.setVisible(False)
        self.tissue_pic.setVisible(False)
        self.tissue_available.setVisible(False)
        self.mugs_container.setVisible(False)
        self.mugs_pic.setVisible(False)
        self.mugs_available.setVisible(False)
        self.coffee_stirrer_container.setVisible(False)
        self.coffee_stirrer_pic.setVisible(False)
        self.coffee_stirrer_available.setVisible(False)

        self.shelf_life_info.setVisible(False)

        self.show_add.clicked.connect(self.show_add_container)
        self.show_update.clicked.connect(self.show_update_container)
        self.add_btn.clicked.connect(self.add_stock_data)
        self.update_btn.clicked.connect(self.update_stock_data)
        self.delete_btn.clicked.connect(self.delete_stock_data)
        self.tableWidget.itemSelectionChanged.connect(self.handle_row_selection)
        self.search_btn.clicked.connect(self.search_stock_data)
        self.sort_combo.currentIndexChanged.connect(self.sort_table_data)
        self.right_btn1.clicked.connect(self.right_switch1)
        self.left_btn1.clicked.connect(self.left_switch1)
        self.right_btn2.clicked.connect(self.right_switch2)
        self.left_btn2.clicked.connect(self.left_switch2)
        self.right_btn3.clicked.connect(self.right_switch3)
        self.left_btn3.clicked.connect(self.left_switch3)
        self.right_btn4.clicked.connect(self.right_switch4)
        self.left_btn4.clicked.connect(self.left_switch4)
        self.right_btn5.clicked.connect(self.right_switch5)
        self.left_btn5.clicked.connect(self.left_switch5)
        self.shelf_life_info_btn.clicked.connect(self.show_shelf_info)
        self.shelf_life_info_btn1.clicked.connect(self.show_shelf_info)
        self.close_btn.clicked.connect(self.close_shelf_info)
        self.logout_btn.clicked.connect(self.logout)

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.load_stocks()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.show_add.setText(_translate("MainWindow", "Add"))
        self.show_update.setText(_translate("MainWindow", "Update"))
        self.label_15.setText(_translate("MainWindow", "BeanStock"))
        self.coffee_name.setText(_translate("MainWindow", "Coffee Beans"))
        self.milk_name.setText(_translate("MainWindow", "Milk"))
        self.sugar_name.setText(_translate("MainWindow", "Sugar"))
        self.choco_name.setText(_translate("MainWindow", "Chocolate Syrup"))
        self.vanilla_name.setText(_translate("MainWindow", "Vanilla Syrup"))
        self.add_date_added_title.setText(_translate("MainWindow", "Date Added"))
        self.add_shelf_life_days.setText(_translate("MainWindow", "(days)"))
        self.update_stock_name_title.setText(_translate("MainWindow", "Stock Name"))
        self.update_quantity_title.setText(_translate("MainWindow", "Quantity"))
        self.update_shelf_life_title.setText(_translate("MainWindow", "Shelf Life"))
        self.update_shelf_life_days.setText(_translate("MainWindow", "(days)"))
        self.update_unit_title.setText(_translate("MainWindow", "Unit"))
        self.update_unit.setItemText(0, _translate("MainWindow", "kg"))
        self.update_unit.setItemText(1, _translate("MainWindow", "pcs"))
        self.update_unit.setItemText(2, _translate("MainWindow", "L"))
        self.update_unit.setItemText(3, _translate("MainWindow", "ml"))
        self.update_unit.setItemText(4, _translate("MainWindow", "g"))
        self.update_btn.setText(_translate("MainWindow", "Update"))
        self.update_date_added_title.setText(_translate("MainWindow", "Date Added"))
        self.label.setText(_translate("MainWindow", "Stock Name"))
        self.label_2.setText(_translate("MainWindow", "Quantity"))
        self.label_3.setText(_translate("MainWindow", "Shelf Life"))
        self.label_4.setText(_translate("MainWindow", "Unit"))
        self.add_unit.setItemText(0, _translate("MainWindow", "kg"))
        self.add_unit.setItemText(1, _translate("MainWindow", "pcs"))
        self.add_unit.setItemText(2, _translate("MainWindow", "L"))
        self.add_unit.setItemText(3, _translate("MainWindow", "ml"))
        self.add_unit.setItemText(4, _translate("MainWindow", "g"))
        self.add_btn.setText(_translate("MainWindow", "Add"))
        self.search_field.setPlaceholderText("Enter stock name to search...")
        self.sort_combo.setItemText(0, _translate("MainWindow", "Default"))
        self.sort_combo.setItemText(1, _translate("MainWindow", "Date Added (Newest)"))
        self.sort_combo.setItemText(2, _translate("MainWindow", "Date Added (Oldest)"))
        self.sort_combo.setItemText(3, _translate("MainWindow", "Expiration Date (Soonest)"))
        self.sort_combo.setItemText(4, _translate("MainWindow", "Expiration Date (Latest)"))
        self.espresso_name.setText(_translate("MainWindow", "Espresso Beans"))
        self.matcha_name.setText(_translate("MainWindow", "Matcha Powder"))
        self.tea_name.setText(_translate("MainWindow", "Tea Bags"))
        self.caramel_name.setText(_translate("MainWindow", "Caramel Sauce"))
        self.hazelnut_name.setText(_translate("MainWindow", "Hazelnut Syrup"))
        self.cinnamon_name.setText(_translate("MainWindow", "Cinnamon Powder"))
        self.whip_cream_name.setText(_translate("MainWindow", "Whip Cream"))
        self.honey_name.setText(_translate("MainWindow", "Honey"))
        self.creamer_name.setText(_translate("MainWindow", "Creamer"))
        self.coconut_milk_name.setText(_translate("MainWindow", "Coconut Milk"))
        self.yogurt_name.setText(_translate("MainWindow", "Yogurt"))
        self.whey_protein_name.setText(_translate("MainWindow", "Whey Protein"))
        self.eggs_name.setText(_translate("MainWindow", "Eggs"))
        self.butter_name.setText(_translate("MainWindow", "Butter"))
        self.flour_name.setText(_translate("MainWindow", "Flour"))
        self.large_cup_name.setText(_translate("MainWindow", "Large Cup"))
        self.medium_cup_name.setText(_translate("MainWindow", "Medium Cup"))
        self.small_cup_name.setText(_translate("MainWindow", "Small Cup"))
        self.cup_carrier_name.setText(_translate("MainWindow", "Cup Carrier"))
        self.paper_straws_name.setText(_translate("MainWindow", "Paper Straws"))
        self.tissue_name.setText(_translate("MainWindow", "Tissue"))
        self.coffee_stirrer_name.setText(_translate("MainWindow", "Coffee Stirrer"))
        self.mugs_name.setText(_translate("MainWindow", "Mugs"))
        self.shelf_life_info_label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:11pt;\">Shelf Life of the following ingredients:</span></p><p><span style=\" color:#c85817;\">Coffee Beans</span> - <span style=\" font-weight:700;\">180 days when sealed/30 days when opened </span></p><p><span style=\" font-weight:700; color:#c85817;\">Milk</span><span style=\" font-weight:700;\"> - 7 days </span></p><p><span style=\" font-weight:700; color:#c85817;\">Sugar</span><span style=\" font-weight:700;\"> - Indefinite </span></p><p><span style=\" font-weight:700; color:#c85817;\">Chocolate Syrup</span><span style=\" font-weight:700;\">- 180 days when sealed/30 days when opened </span></p><p><span style=\" color:#c85817;\">Vanilla Syrup</span> - 180 days when sealed/30 days when opened </p><p><span style=\" color:#c85817;\">Tea Bag</span> - 365 days when sealed/180 days when opened </p><p><span style=\" color:#c85817;\">Espresso Beans</span> - 180 days when sealed/14 days when opened </p><p><span style=\" color:#c85817;\">Matcha Powder</span> - 180 days when sealed/30 days when opened </p><p><span style=\" color:#c85817;\">Caramel Sauce</span> - 180 days when sealed/30 days when opened </p><p><span style=\" color:#c85817;\">Hazelnut Syrup</span> - 180 days when sealed/30 days when opened </p><p><span style=\" color:#c85817;\">Cinnamon Powder</span> - 365 days when sealed/180 days when opened </p><p><span style=\" color:#c85817;\">Whip Cream</span> - 7 days when opened (if refrigerated properly) </p><p><span style=\" color:#c85817;\">Honey</span> - Indefinite when stored in a sealed, dry container </p><p><span style=\" color:#c85817;\">Liquid Creamer</span> - 14 days when opened (if refrigerated properly) </p><p><span style=\" color:#c85817;\">Coconut Milk</span> - 7-10 days when opened (if refrigerated properly) </p><p><span style=\" color:#c85817;\">Yogurt</span> - 7-14 days when opened (if refrigerated properly) </p><p><span style=\" color:#c85817;\">Whey Protein</span> - 365 days when sealed/180 days when opened </p><p><span style=\" color:#c85817;\">Eggs</span> - 21 days (refrigerated) </p><p><span style=\" color:#c85817;\">Butter</span> - 180 days when refrigerated/30 days at room temperature </p><p><span style=\" color:#c85817;\">Flour</span> - 365 days when sealed</p><p><br/></p><p><br/></p><p><br/></p></body></html>"))
        self.close_btn.setText(_translate("MainWindow", "X"))
        self.shelf_life_info_btn.setText(_translate("MainWindow", "i"))
        self.shelf_life_info_btn1.setText(_translate("MainWindow", "i"))

    def set_active_button(self, active_button):
        self.show_add.setStyleSheet(self.inactive_button_style)
        self.show_update.setStyleSheet(self.inactive_button_style)
        active_button.setStyleSheet(self.active_button_style)

    def show_add_container(self):
        self.set_active_button(self.show_add)
        self.add_container.setVisible(True)
        self.update_container.setVisible(False)

    def show_update_container(self):
        self.set_active_button(self.show_update)
        self.add_container.setVisible(False)
        self.update_container.setVisible(True)

    def load_stocks(self):
        try:
            stocks = get_all_stocks()

            self.tableWidget.setRowCount(len(stocks))
            self.tableWidget.setColumnCount(7)
            headers = ["Stock\nID", "Stock\nName", "Quantity", "Unit", "Date\nAdded", "Shelf\nLife (days)",
                       "Expiration\nDate"]
            self.tableWidget.setHorizontalHeaderLabels(headers)

            for row, stock in enumerate(stocks):
                for col, value in enumerate(stock):
                    display_value = str(value) if value is not None else ' '
                    self.tableWidget.setItem(row, col, QTableWidgetItem(display_value))

            self.calculate_total_quantity(self.coffee_available, "coffee beans")
            self.calculate_total_quantity(self.milk_available, "milk")
            self.calculate_total_quantity(self.sugar_available, "sugar")
            self.calculate_total_quantity(self.choco_available, "chocolate syrup")
            self.calculate_total_quantity(self.vanilla_available, "vanilla syrup")
            self.calculate_total_quantity(self.espresso_available, "Espresso Beans")
            self.calculate_total_quantity(self.matcha_available, "Matcha Powder")
            self.calculate_total_quantity(self.tea_available, "Tea Bags")
            self.calculate_total_quantity(self.caramel_available, "Caramel Sauce")
            self.calculate_total_quantity(self.hazelnut_available, "Hazelnut Syrup")
            self.calculate_total_quantity(self.cinnamon_available, "Cinnamon Powder")
            self.calculate_total_quantity(self.whip_cream_available, "Whip Cream")
            self.calculate_total_quantity(self.honey_available, "Honey")
            self.calculate_total_quantity(self.creamer_available, "Creamer")
            self.calculate_total_quantity(self.coconut_milk_available, "Coconut Milk")
            self.calculate_total_quantity(self.yogurt_available, "Yogurt")
            self.calculate_total_quantity(self.whey_protein_available, "Whey Protein")
            self.calculate_total_quantity(self.eggs_available, "Eggs")
            self.calculate_total_quantity(self.butter_available, "Butter")
            self.calculate_total_quantity(self.flour_available, "Flour")
            self.calculate_total_quantity(self.large_cup_available, "Large Cup")
            self.calculate_total_quantity(self.medium_cup_available, "Medium Cup")
            self.calculate_total_quantity(self.small_cup_available, "Small Cup")
            self.calculate_total_quantity(self.cup_carrier_available, "Cup Carrier")
            self.calculate_total_quantity(self.paper_straws_available, "Paper Straws")
            self.calculate_total_quantity(self.tissue_available, "Tissue")
            self.calculate_total_quantity(self.mugs_available, "Mugs")
            self.calculate_total_quantity(self.coffee_stirrer_available, "Coffee Stirrer")

        except Exception as e:
            print(f"Error loading stocks: {e}")
            QMessageBox.critical(self, 'Error', 'An unexpected error occurred while loading the stocks.')

    def add_stock_data(self):
        try:
            stock_name = self.add_stock_name.text()
            quantity = float(self.add_quantity.text())
            quantity_unit = self.add_unit.currentText()

            shelf_life_text = self.add_shelf_life.text()
            shelf_life = int(shelf_life_text) if shelf_life_text else None

            user_id = 1
            date_added = datetime.now().strftime('%Y-%m-%d')

            add_stock(user_id, stock_name, quantity, quantity_unit, shelf_life, date_added)
            self.load_stocks()
            self.show_message('Success', 'Stock added successfully!', QMessageBox.Information)

        except ValueError:
            self.show_message('Invalid Input', 'Please enter valid numbers for quantity.',
                              QMessageBox.Warning)
        except Exception as e:
            print(f"Unexpected error: {e}")
            QMessageBox.critical(self, 'Error', 'An unexpected error occurred while adding the stock.')

    def update_stock_data(self):
        try:
            name = self.update_stock_name.text()
            quantity = float(self.update_quantity.text())
            unit = self.update_unit.currentText()

            shelf_life_text = self.update_shelf_life.text()
            shelf_life = int(shelf_life_text) if shelf_life_text else None

            date_added = self.update_date_added.date().toString('yyyy-MM-dd')

            if hasattr(self, 'selected_stock_id') and self.selected_stock_id is not None:
                stock_id = self.selected_stock_id

                update_stock(stock_id, name, quantity, unit, shelf_life, date_added)
                self.load_stocks()
                self.show_message('Success', f"Stock ID {stock_id} updated successfully!", QMessageBox.Information)
            else:
                self.show_message('Invalid Selection', 'Please select a stock to update.', QMessageBox.Warning)

        except ValueError:
            self.show_message('Invalid Input', 'Please enter valid numbers for quantity and shelf life.',
                              QMessageBox.Warning)
        except Exception as e:
            print(f"Unexpected error: {e}")
            QMessageBox.critical(self, 'Error', 'An unexpected error occurred while updating the stock.')

    def delete_stock_data(self):
        try:
            selected_items = self.tableWidget.selectedItems()
            if selected_items:
                stock_ids = set()
                for item in selected_items:
                    row = item.row()
                    stock_id = self.tableWidget.item(row, 0).text()
                    if stock_id:
                        stock_ids.add(int(stock_id))

                if stock_ids:
                    stock_ids_list = ', '.join(map(str, stock_ids))
                    reply = QMessageBox.question(
                        self.centralwidget,
                        'Confirm Deletion',
                        f"Are you sure you want to delete the following stock?",
                        QMessageBox.Yes | QMessageBox.No,
                        QMessageBox.No
                    )
                    if reply == QMessageBox.Yes:
                        for stock_id in stock_ids:
                            delete_stock(stock_id)
                        self.update_stock_name.clear()
                        self.update_quantity.clear()
                        self.update_shelf_life.clear()
                        self.update_unit.setCurrentIndex(0)
                        self.update_date_added.setDate(QDate.currentDate())
                        self.load_stocks()
                        self.show_message('Success', f"Stock IDs {stock_ids_list} deleted successfully!",
                                          QMessageBox.Information)
                else:
                    self.show_message('Error', 'No valid stock IDs found for deletion.', QMessageBox.Warning)
            else:
                self.show_message('Error', 'No stock selected for deletion.', QMessageBox.Warning)
        except Exception as e:
            print(f"Unexpected error: {e}")
            self.show_message('Error', 'An unexpected error occurred while deleting the stocks.',
                              QMessageBox.critical)

    def search_stock_data(self):
        try:
            search_term = self.search_field.text().strip().lower()

            stocks = get_all_stocks()

            matching_stocks = [stock for stock in stocks if
                               search_term in str(stock[1]).lower()]

            self.tableWidget.setRowCount(0)

            self.tableWidget.setRowCount(len(matching_stocks))
            headers = ["Stock\nID", "Stock\nName", "Quantity", "Unit", "Date\nAdded", "Shelf\nLife (days)",
                       "Expiration\nDate"]
            self.tableWidget.setHorizontalHeaderLabels(headers)

            for row, stock in enumerate(matching_stocks):
                for col, value in enumerate(stock):
                    self.tableWidget.setItem(row, col, QTableWidgetItem(str(value)))

            if not matching_stocks:
                self.show_message('No Results', 'No stocks found matching your search criteria.',
                                  QMessageBox.Information)

        except Exception as e:
            print(f"Unexpected error: {e}")
            QMessageBox.critical(self, 'Error', 'An unexpected error occurred while searching for stocks.')

    def sort_table_data(self):
        try:
            sort_option = self.sort_combo.currentText()

            stocks = get_all_stocks()

            if sort_option == "Default":
                stocks.sort(key=lambda x: x[0])
            elif sort_option == "Date Added (Newest)":
                stocks.sort(key=lambda x: x[4], reverse=True)
            elif sort_option == "Date Added (Oldest)":
                stocks.sort(key=lambda x: x[4])
            elif sort_option == "Expiration Date (Soonest)":
                stocks.sort(key=lambda x: x[6] if x[
                                                      6] is not None else "")
            elif sort_option == "Expiration Date (Latest)":
                stocks.sort(key=lambda x: x[6] if x[6] is not None else "", reverse=True)

            self.tableWidget.setRowCount(len(stocks))
            headers = ["Stock\nID", "Stock\nName", "Quantity", "Unit", "Date\nAdded", "Shelf\nLife (days)",
                       "Expiration\nDate"]
            self.tableWidget.setHorizontalHeaderLabels(headers)

            for row, stock in enumerate(stocks):
                for col, value in enumerate(stock):
                    self.tableWidget.setItem(row, col, QTableWidgetItem(str(value)))

        except Exception as e:
            print(f"Unexpected error: {e}")
            QMessageBox.critical(self, 'Error', 'An unexpected error occurred while sorting the table.')

    def calculate_total_quantity(self, label, item_name):
        try:
            stocks = get_all_stocks()

            total_quantity = 0
            unit = ""
            for stock in stocks:
                if stock[1].lower() == item_name.lower():
                    total_quantity += stock[2]
                    unit = stock[3]

            if total_quantity > 0:
                label.setText(f"{total_quantity} {unit}")
            else:
                label.setText("No stock")
        except Exception as e:
            print(f"Error calculating total quantity: {e}")

    def show_message(self, title, message, icon):
            QMessageBox(icon, title, message).exec_()

    def handle_row_selection(self):
        try:
            selected_items = self.tableWidget.selectedItems()
            if selected_items:
                self.delete_btn.setEnabled(True)
                selected_row = selected_items[0].row()
                stock_id = self.tableWidget.item(selected_row, 0).text()
                stock_name = self.tableWidget.item(selected_row, 1).text()
                quantity = self.tableWidget.item(selected_row, 2).text()
                unit = self.tableWidget.item(selected_row, 3).text()
                date_added = self.tableWidget.item(selected_row, 4).text()
                shelf_life = self.tableWidget.item(selected_row, 5).text()

                self.update_stock_name.setText(stock_name)
                self.update_quantity.setText(quantity)
                self.update_unit.setCurrentText(unit)
                self.update_shelf_life.setText(shelf_life)
                self.update_date_added.setDate(QDate.fromString(date_added, 'yyyy-MM-dd'))

                self.selected_stock_id = int(stock_id)

        except Exception as e:
            print(f"Error selecting row: {e}")

    def right_switch1(self):
        self.coffee_container.setVisible(False)
        self.coffee_pic.setVisible(False)
        self.coffee_available.setVisible(False)
        self.milk_container.setVisible(False)
        self.milk_pic.setVisible(False)
        self.milk_available.setVisible(False)
        self.sugar_container.setVisible(False)
        self.sugar_pic.setVisible(False)
        self.sugar_available.setVisible(False)
        self.choco_container.setVisible(False)
        self.choco_pic.setVisible(False)
        self.choco_available.setVisible(False)
        self.vanilla_container.setVisible(False)
        self.vanilla_pic.setVisible(False)
        self.vanilla_available.setVisible(False)

        self.espresso_container.setVisible(True)
        self.espresso_pic.setVisible(True)
        self.espresso_available.setVisible(True)
        self.matcha_container.setVisible(True)
        self.matcha_pic.setVisible(True)
        self.matcha_available.setVisible(True)
        self.tea_container.setVisible(True)
        self.tea_pic.setVisible(True)
        self.tea_available.setVisible(True)
        self.caramel_container.setVisible(True)
        self.caramel_pic.setVisible(True)
        self.caramel_available.setVisible(True)
        self.hazelnut_container.setVisible(True)
        self.hazelnut_pic.setVisible(True)
        self.hazelnut_available.setVisible(True)

        self.left_btn1.setVisible(True)
        self.right_btn1.setVisible(False)
        self.right_btn2.setVisible(True)

    def left_switch1(self):
        self.coffee_container.setVisible(True)
        self.coffee_pic.setVisible(True)
        self.coffee_available.setVisible(True)
        self.milk_container.setVisible(True)
        self.milk_pic.setVisible(True)
        self.milk_available.setVisible(True)
        self.sugar_container.setVisible(True)
        self.sugar_pic.setVisible(True)
        self.sugar_available.setVisible(True)
        self.choco_container.setVisible(True)
        self.choco_pic.setVisible(True)
        self.choco_available.setVisible(True)
        self.vanilla_container.setVisible(True)
        self.vanilla_pic.setVisible(True)
        self.vanilla_available.setVisible(True)

        self.espresso_container.setVisible(False)
        self.espresso_pic.setVisible(False)
        self.espresso_available.setVisible(False)
        self.matcha_container.setVisible(False)
        self.matcha_pic.setVisible(False)
        self.matcha_available.setVisible(False)
        self.tea_container.setVisible(False)
        self.tea_pic.setVisible(False)
        self.tea_available.setVisible(False)
        self.caramel_container.setVisible(False)
        self.caramel_pic.setVisible(False)
        self.caramel_available.setVisible(False)
        self.hazelnut_container.setVisible(False)
        self.hazelnut_pic.setVisible(False)
        self.hazelnut_available.setVisible(False)

        self.right_btn1.setVisible(True)
        self.right_btn2.setVisible(False)
        self.left_btn1.setVisible(False)

    def right_switch2(self):
        self.espresso_container.setVisible(False)
        self.espresso_pic.setVisible(False)
        self.espresso_available.setVisible(False)
        self.matcha_container.setVisible(False)
        self.matcha_pic.setVisible(False)
        self.matcha_available.setVisible(False)
        self.tea_container.setVisible(False)
        self.tea_pic.setVisible(False)
        self.tea_available.setVisible(False)
        self.caramel_container.setVisible(False)
        self.caramel_pic.setVisible(False)
        self.caramel_available.setVisible(False)
        self.hazelnut_container.setVisible(False)
        self.hazelnut_pic.setVisible(False)
        self.hazelnut_available.setVisible(False)

        self.cinnamon_container.setVisible(True)
        self.cinnamon_pic.setVisible(True)
        self.cinnamon_available.setVisible(True)
        self.whip_cream_container.setVisible(True)
        self.whip_cream_pic.setVisible(True)
        self.whip_cream_available.setVisible(True)
        self.honey_container.setVisible(True)
        self.honey_pic.setVisible(True)
        self.honey_available.setVisible(True)
        self.creamer_container.setVisible(True)
        self.creamer_pic.setVisible(True)
        self.creamer_available.setVisible(True)
        self.coconut_milk_container.setVisible(True)
        self.coconut_milk_pic.setVisible(True)
        self.coconut_milk_available.setVisible(True)

        self.left_btn2.setVisible(True)
        self.right_btn2.setVisible(False)
        self.right_btn3.setVisible(True)

    def left_switch2(self):
        self.espresso_container.setVisible(True)
        self.espresso_pic.setVisible(True)
        self.espresso_available.setVisible(True)
        self.matcha_container.setVisible(True)
        self.matcha_pic.setVisible(True)
        self.matcha_available.setVisible(True)
        self.tea_container.setVisible(True)
        self.tea_pic.setVisible(True)
        self.tea_available.setVisible(True)
        self.caramel_container.setVisible(True)
        self.caramel_pic.setVisible(True)
        self.caramel_available.setVisible(True)
        self.hazelnut_container.setVisible(True)
        self.hazelnut_pic.setVisible(True)
        self.hazelnut_available.setVisible(True)

        self.cinnamon_container.setVisible(False)
        self.cinnamon_pic.setVisible(False)
        self.cinnamon_available.setVisible(False)
        self.whip_cream_container.setVisible(False)
        self.whip_cream_pic.setVisible(False)
        self.whip_cream_available.setVisible(False)
        self.honey_container.setVisible(False)
        self.honey_pic.setVisible(False)
        self.honey_available.setVisible(False)
        self.creamer_container.setVisible(False)
        self.creamer_pic.setVisible(False)
        self.creamer_available.setVisible(False)
        self.coconut_milk_container.setVisible(False)
        self.coconut_milk_pic.setVisible(False)
        self.coconut_milk_available.setVisible(False)

        self.right_btn2.setVisible(True)
        self.right_btn3.setVisible(False)
        self.left_btn2.setVisible(False)
        self.left_btn1.setVisible(True)

    def right_switch3(self):
        self.yogurt_container.setVisible(True)
        self.yogurt_pic.setVisible(True)
        self.yogurt_available.setVisible(True)
        self.whey_protein_container.setVisible(True)
        self.whey_protein_pic.setVisible(True)
        self.whey_protein_available.setVisible(True)
        self.eggs_container.setVisible(True)
        self.eggs_pic.setVisible(True)
        self.eggs_available.setVisible(True)
        self.butter_container.setVisible(True)
        self.butter_pic.setVisible(True)
        self.butter_available.setVisible(True)
        self.flour_container.setVisible(True)
        self.flour_pic.setVisible(True)
        self.flour_available.setVisible(True)

        self.cinnamon_container.setVisible(False)
        self.cinnamon_pic.setVisible(False)
        self.cinnamon_available.setVisible(False)
        self.whip_cream_container.setVisible(False)
        self.whip_cream_pic.setVisible(False)
        self.whip_cream_available.setVisible(False)
        self.honey_container.setVisible(False)
        self.honey_pic.setVisible(False)
        self.honey_available.setVisible(False)
        self.creamer_container.setVisible(False)
        self.creamer_pic.setVisible(False)
        self.creamer_available.setVisible(False)
        self.coconut_milk_container.setVisible(False)
        self.coconut_milk_pic.setVisible(False)
        self.coconut_milk_available.setVisible(False)

        self.left_btn3.setVisible(True)
        self.right_btn3.setVisible(False)
        self.right_btn4.setVisible(True)


    def left_switch3(self):
        self.cinnamon_container.setVisible(True)
        self.cinnamon_pic.setVisible(True)
        self.cinnamon_available.setVisible(True)
        self.whip_cream_container.setVisible(True)
        self.whip_cream_pic.setVisible(True)
        self.whip_cream_available.setVisible(True)
        self.honey_container.setVisible(True)
        self.honey_pic.setVisible(True)
        self.honey_available.setVisible(True)
        self.creamer_container.setVisible(True)
        self.creamer_pic.setVisible(True)
        self.creamer_available.setVisible(True)
        self.coconut_milk_container.setVisible(True)
        self.coconut_milk_pic.setVisible(True)
        self.coconut_milk_available.setVisible(True)

        self.yogurt_container.setVisible(False)
        self.yogurt_pic.setVisible(False)
        self.yogurt_available.setVisible(False)
        self.whey_protein_container.setVisible(False)
        self.whey_protein_pic.setVisible(False)
        self.whey_protein_available.setVisible(False)
        self.eggs_container.setVisible(False)
        self.eggs_pic.setVisible(False)
        self.eggs_available.setVisible(False)
        self.butter_container.setVisible(False)
        self.butter_pic.setVisible(False)
        self.butter_available.setVisible(False)
        self.flour_container.setVisible(False)
        self.flour_pic.setVisible(False)
        self.flour_available.setVisible(False)

        self.right_btn3.setVisible(True)
        self.right_btn4.setVisible(False)
        self.left_btn3.setVisible(False)
        self.left_btn2.setVisible(True)

    def right_switch4(self):
        self.yogurt_container.setVisible(False)
        self.yogurt_pic.setVisible(False)
        self.yogurt_available.setVisible(False)
        self.whey_protein_container.setVisible(False)
        self.whey_protein_pic.setVisible(False)
        self.whey_protein_available.setVisible(False)
        self.eggs_container.setVisible(False)
        self.eggs_pic.setVisible(False)
        self.eggs_available.setVisible(False)
        self.butter_container.setVisible(False)
        self.butter_pic.setVisible(False)
        self.butter_available.setVisible(False)
        self.flour_container.setVisible(False)
        self.flour_pic.setVisible(False)
        self.flour_available.setVisible(False)

        self.large_cup_container.setVisible(True)
        self.large_cup_pic.setVisible(True)
        self.large_cup_available.setVisible(True)
        self.medium_cup_container.setVisible(True)
        self.medium_cup_pic.setVisible(True)
        self.medium_cup_available.setVisible(True)
        self.small_cup_container.setVisible(True)
        self.small_cup_pic.setVisible(True)
        self.small_cup_available.setVisible(True)
        self.cup_carrier_container.setVisible(True)
        self.cup_carrier_pic.setVisible(True)
        self.cup_carrier_available.setVisible(True)
        self.paper_straws_container.setVisible(True)
        self.paper_straws_pic.setVisible(True)
        self.paper_straws_available.setVisible(True)

        self.left_btn4.setVisible(True)
        self.right_btn4.setVisible(False)
        self.right_btn5.setVisible(True)

    def left_switch4(self):
        self.yogurt_container.setVisible(True)
        self.yogurt_pic.setVisible(True)
        self.yogurt_available.setVisible(True)
        self.whey_protein_container.setVisible(True)
        self.whey_protein_pic.setVisible(True)
        self.whey_protein_available.setVisible(True)
        self.eggs_container.setVisible(True)
        self.eggs_pic.setVisible(True)
        self.eggs_available.setVisible(True)
        self.butter_container.setVisible(True)
        self.butter_pic.setVisible(True)
        self.butter_available.setVisible(True)
        self.flour_container.setVisible(True)
        self.flour_pic.setVisible(True)
        self.flour_available.setVisible(True)

        self.large_cup_container.setVisible(False)
        self.large_cup_pic.setVisible(False)
        self.large_cup_available.setVisible(False)
        self.medium_cup_container.setVisible(False)
        self.medium_cup_pic.setVisible(False)
        self.medium_cup_available.setVisible(False)
        self.small_cup_container.setVisible(False)
        self.small_cup_pic.setVisible(False)
        self.small_cup_available.setVisible(False)
        self.cup_carrier_container.setVisible(False)
        self.cup_carrier_pic.setVisible(False)
        self.cup_carrier_available.setVisible(False)
        self.paper_straws_container.setVisible(False)
        self.paper_straws_pic.setVisible(False)
        self.paper_straws_available.setVisible(False)

        self.right_btn4.setVisible(True)
        self.right_btn5.setVisible(False)
        self.left_btn4.setVisible(False)
        self.left_btn3.setVisible(True)

    def right_switch5(self):
        self.tissue_container.setVisible(True)
        self.tissue_pic.setVisible(True)
        self.tissue_available.setVisible(True)
        self.mugs_container.setVisible(True)
        self.mugs_pic.setVisible(True)
        self.mugs_available.setVisible(True)
        self.coffee_stirrer_container.setVisible(True)
        self.coffee_stirrer_pic.setVisible(True)
        self.coffee_stirrer_available.setVisible(True)

        self.large_cup_container.setVisible(False)
        self.large_cup_pic.setVisible(False)
        self.large_cup_available.setVisible(False)
        self.medium_cup_container.setVisible(False)
        self.medium_cup_pic.setVisible(False)
        self.medium_cup_available.setVisible(False)
        self.small_cup_container.setVisible(False)
        self.small_cup_pic.setVisible(False)
        self.small_cup_available.setVisible(False)
        self.cup_carrier_container.setVisible(False)
        self.cup_carrier_pic.setVisible(False)
        self.cup_carrier_available.setVisible(False)
        self.paper_straws_container.setVisible(False)
        self.paper_straws_pic.setVisible(False)
        self.paper_straws_available.setVisible(False)

        self.left_btn5.setVisible(True)
        self.right_btn5.setVisible(False)

    def left_switch5(self):
        self.tissue_container.setVisible(False)
        self.tissue_pic.setVisible(False)
        self.tissue_available.setVisible(False)
        self.mugs_container.setVisible(False)
        self.mugs_pic.setVisible(False)
        self.mugs_available.setVisible(False)
        self.coffee_stirrer_container.setVisible(False)
        self.coffee_stirrer_pic.setVisible(False)
        self.coffee_stirrer_available.setVisible(False)

        self.large_cup_container.setVisible(True)
        self.large_cup_pic.setVisible(True)
        self.large_cup_available.setVisible(True)
        self.medium_cup_container.setVisible(True)
        self.medium_cup_pic.setVisible(True)
        self.medium_cup_available.setVisible(True)
        self.small_cup_container.setVisible(True)
        self.small_cup_pic.setVisible(True)
        self.small_cup_available.setVisible(True)
        self.cup_carrier_container.setVisible(True)
        self.cup_carrier_pic.setVisible(True)
        self.cup_carrier_available.setVisible(True)
        self.paper_straws_container.setVisible(True)
        self.paper_straws_pic.setVisible(True)
        self.paper_straws_available.setVisible(True)

        self.right_btn5.setVisible(True)
        self.left_btn5.setVisible(False)
        self.left_btn4.setVisible(True)

    def show_shelf_info(self):
        self.shelf_life_info.setVisible(True)

    def close_shelf_info(self):
        self.shelf_life_info.setVisible(False)

    def logout(self):
        try:
            reply = QtWidgets.QMessageBox.question(
                self.MainWindow,
                "Confirm Logout",
                "Are you sure you want to log out?",
                QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No
            )

            if reply == QtWidgets.QMessageBox.Yes:
                self.open_login_window()

        except Exception as e:
            print(f"Unexpected error during logout: {e}")
            QtWidgets.QMessageBox.critical(
                self.MainWindow,
                "Error",
                "An unexpected error occurred while logging out."
            )

    def open_login_window(self):
        from login import Ui_LoginWindow
        self.login_window = QtWidgets.QMainWindow()
        self.login_ui = Ui_LoginWindow()
        self.login_ui.setupUi(self.login_window)
        self.login_ui.login_window = self.login_window
        self.login_window.show()

        self.MainWindow.close()

if __name__ == "__main__":
    import sys
    create_database()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.MainWindow = MainWindow
    ui.setupUi(MainWindow)
    MainWindow.setWindowTitle("BeanStock")
    MainWindow.show()
    sys.exit(app.exec_())
